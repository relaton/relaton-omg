---
http_interactions:
- request:
    method: get
    uri: https://www.omg.org/spec/AMI4CCM/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: ''
    headers:
      Date:
      - Sun, 02 Mar 2025 03:48:52 GMT
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cache-Control:
      - max-age=86400, public, s-maxage=3600
      Vary:
      - accept-encoding
      Content-Language:
      - en-US
      Cf-Cache-Status:
      - MISS
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v4?s=j3SDTa%2BLqKywrPsbgmFQtsRw20WbKzIt7KTbNDUlKmvGM4yOTsp9iVjnZSq43BsAix6PSumfiCV5DO3bl23%2FKzUAPiwStbB64bn0M3WALSrE0DD8K3%2BzFg9i6gCjOe9hudv3N5qycTtP"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'
      Server:
      - cloudflare
      Cf-Ray:
      - 919debc298b4bfec-ATL
      Alt-Svc:
      - h3=":443"; ma=86400
      Server-Timing:
      - cfL4;desc="?proto=TCP&rtt=9893&min_rtt=9691&rtt_var=4039&sent=5&recv=6&lost=0&retrans=0&sent_bytes=2780&recv_bytes=752&delivery_rate=357464&cwnd=252&unsent_bytes=0&cid=38aefbddbf6ea210&ts=137&x=0"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 02 Mar 2025 03:48:51 GMT
recorded_with: VCR 6.3.1
