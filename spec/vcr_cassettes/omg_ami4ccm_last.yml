---
http_interactions:
- request:
    method: get
    uri: https://www.omg.org/spec/AMI4CCM/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: ''
    headers:
      Date:
      - Wed, 26 Jun 2024 21:28:31 GMT
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cache-Control:
      - max-age=86400, public, s-maxage=3600
      Vary:
      - accept-encoding
      Content-Language:
      - en-US
      Cf-Cache-Status:
      - DYNAMIC
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v4?s=FK42GDUnhtjnGm2FUzZgpyQumqRmpK0rSi9DbqnK6seBj5LoXrnKamkikVaSHecrkpEMfjxJxgdNhEkUgldea32jKLW7nQ0%2FWJokaCC8%2BvMCv0OAzwzrY5Yo7M3zOeGPx%2BVzWB9NCnQu"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'
      Server:
      - cloudflare
      Cf-Ray:
      - 89a049951bd453f3-ATL
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIEhUTUw+CjxodG1sIGxhbmc9ImVuIiBjbGFzcz0ianMgbm8tdG91Y2ggY3NzdHJhbnNmb3JtczNkIGNzc3RyYW5zaXRpb25zIj4KCgoKCgoKCgoKCgoKPGhlYWQ+CiAgICA8dGl0bGU+QWJvdXQgdGhlIEFzeW5jaHJvbm91cyBNZXRob2QgSW52b2NhdGlvbiBmb3IgQ0NNIFNwZWNpZmljYXRpb24gVmVyc2lvbiAxLjE8L3RpdGxlPgogICAgPGxpbmsgcmVsPSJhbHRlcm5hdGUiIHR5cGU9ImFwcGxpY2F0aW9uL2pzb24iIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvc3BlYy9BTUk0Q0NNLzEuMS9BYm91dC1BTUk0Q0NNIi8+CiAgICAKICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ii8+CiAgICA8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1VVEYtOCIvPgogICAgPGxpbmsgcmVsPSJjYW5vbmljYWwiIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvc3BlYy9BTUk0Q0NNLzEuMS9BYm91dC1BTUk0Q0NNIi8+CiAgICA8bGluayByZWw9ImFsdGVybmF0ZSIgdHlwZT0iYXBwbGljYXRpb24vcmRmK3htbCIgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9zcGVjL0FNSTRDQ00vMS4xL0Fib3V0LUFNSTRDQ00iLz4KICAgIDxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vbGQranNvbiI+WyB7CiAgIkBpZCIgOiAiaHR0cHM6Ly9wdXJsLm9yZy9kYy90ZXJtcy9saWNlbnNlIiwKICAiQHR5cGUiIDogWyAiaHR0cDovL3d3dy53My5vcmcvMjAwMi8wNy9vd2wjQW5ub3RhdGlvblByb3BlcnR5IiBdCn0sIHsKICAiQGlkIiA6ICJodHRwczovL3d3dy5vbWcub3JnL3NwZWMvQU1JNENDTSIsCiAgIkB0eXBlIiA6IFsgImh0dHA6Ly93d3cudzMub3JnLzIwMDIvMDcvb3dsI05hbWVkSW5kaXZpZHVhbCIgXSwKICAiaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zI3R5cGUiIDogWyB7CiAgICAiQGlkIiA6ICJodHRwczovL3d3dy5vbWcub3JnL3RlY2hwcm9jZXNzL2FiL1NwZWNpZmljYXRpb25NZXRhZGF0YS9TcGVjaWZpY2F0aW9uIgogIH0gXSwKICAiaHR0cHM6Ly93d3cub21nLm9yZy90ZWNocHJvY2Vzcy9hYi9TcGVjaWZpY2F0aW9uTWV0YWRhdGEvY2F0ZWdvcnkiIDogWyB7CiAgICAiQHZhbHVlIiA6ICJjb21wb25lbnQtYXJjaGl0ZWN0dXJlIgogIH0sIHsKICAgICJAdmFsdWUiIDogImNvcmJhLXBsYXRmb3JtIgogIH0sIHsKICAgICJAdmFsdWUiIDogImRvbWFpbiIKICB9IF0sCiAgImh0dHBzOi8vd3d3Lm9tZy5vcmcvdGVjaHByb2Nlc3MvYWIvU3BlY2lmaWNhdGlvbk1ldGFkYXRhL3B1YmxpY2F0aW9uRGF0ZSIgOiBbIHsKICAgICJAdHlwZSIgOiAiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEjZGF0ZVRpbWUiLAogICAgIkB2YWx1ZSIgOiAiMjAxNS0wOC0wMlQwMDowMDowMC0wNDAwIgogIH0gXSwKICAiaHR0cHM6Ly93d3cub21nLm9yZy90ZWNocHJvY2Vzcy9hYi9TcGVjaWZpY2F0aW9uTWV0YWRhdGEvc3BlY2lmaWNhdGlvbkFiYnJldmlhdGlvbiIgOiBbIHsKICAgICJAdmFsdWUiIDogIkFNSTRDQ00iCiAgfSBdLAogICJodHRwczovL3d3dy5vbWcub3JnL3RlY2hwcm9jZXNzL2FiL1NwZWNpZmljYXRpb25NZXRhZGF0YS9zcGVjaWZpY2F0aW9uQWJzdHJhY3QiIDogWyB7CiAgICAiQHZhbHVlIiA6ICJUaGlzIHNwZWNpZmljYXRpb24gZGVmaW5lcyBhIG1lY2hhbmlzbSB0byBwZXJmb3JtIGFzeW5jaHJvbm91cyBtZXRob2QgaW52b2NhdGlvbiBmb3IgQ0NNLiIKICB9IF0sCiAgImh0dHBzOi8vd3d3Lm9tZy5vcmcvdGVjaHByb2Nlc3MvYWIvU3BlY2lmaWNhdGlvbk1ldGFkYXRhL3NwZWNpZmljYXRpb25UaXRsZSIgOiBbIHsKICAgICJAdmFsdWUiIDogIkFzeW5jaHJvbm91cyBNZXRob2QgSW52b2NhdGlvbiBmb3IgQ0NNIgogIH0gXSwKICAiaHR0cHM6Ly93d3cub21nLm9yZy90ZWNocHJvY2Vzcy9hYi9TcGVjaWZpY2F0aW9uTWV0YWRhdGEvc3BlY2lmaWNhdGlvblVSTCIgOiBbIHsKICAgICJAaWQiIDogImh0dHBzOi8vd3d3Lm9tZy5vcmcvc3BlYy9BTUk0Q0NNL0Fib3V0LUFNSTRDQ00iCiAgfSBdCn0sIHsKICAiQGlkIiA6ICJodHRwczovL3d3dy5vbWcub3JnL3NwZWMvQU1JNENDTS9BYm91dC1BTUk0Q0NNIiwKICAiQHR5cGUiIDogWyAiaHR0cDovL3d3dy53My5vcmcvMjAwMi8wNy9vd2wjT250b2xvZ3kiIF0sCiAgImh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDEvcmRmLXNjaGVtYSNsYWJlbCIgOiBbIHsKICAgICJAdmFsdWUiIDogIkFib3V0IHRoZSBBc3luY2hyb25vdXMgTWV0aG9kIEludm9jYXRpb24gZm9yIENDTSBTcGVjaWZpY2F0aW9uIFZlcnNpb24gMS4xIgogIH0gXSwKICAiaHR0cDovL3d3dy53My5vcmcvMjAwMi8wNy9vd2wjaW1wb3J0cyIgOiBbIHsKICAgICJAaWQiIDogImh0dHBzOi8vd3d3Lm9tZy5vcmcvdGVjaHByb2Nlc3MvYWIvU3BlY2lmaWNhdGlvbk1ldGFkYXRhLyIKICB9IF0sCiAgImh0dHA6Ly93d3cudzMub3JnLzIwMDIvMDcvb3dsI3ZlcnNpb25JUkkiIDogWyB7CiAgICAiQGlkIiA6ICJodHRwczovL3d3dy5vbWcub3JnL3NwZWMvQU1JNENDTS8xLjEvQWJvdXQtQU1JNENDTSIKICB9IF0sCiAgImh0dHA6Ly93d3cudzMub3JnLzIwMDIvMDcvb3dsI3ZlcnNpb25JbmZvIiA6IFsgewogICAgIkB2YWx1ZSIgOiAiR2VuZXJhdGVkIG9uIDIwMjQtMDYtMjJUMjA6MTk6MTAtMDQwMCIKICB9IF0sCiAgImh0dHBzOi8vcHVybC5vcmcvZGMvdGVybXMvbGljZW5zZSIgOiBbIHsKICAgICJAaWQiIDogImh0dHBzOi8vd3d3Lm9tZy5vcmcvdGVjaHByb2Nlc3MvYWIvU3BlY2lmaWNhdGlvbk1ldGFkYXRhL01JVExpY2Vuc2UiCiAgfSBdLAogICJodHRwczovL3d3dy5vbWcub3JnL3RlY2hwcm9jZXNzL2FiL1NwZWNpZmljYXRpb25NZXRhZGF0YS9jcmVhdGlvbkRhdGUiIDogWyB7CiAgICAiQHR5cGUiIDogImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hI2RhdGVUaW1lIiwKICAgICJAdmFsdWUiIDogIjIwMTUtMDgtMDJUMDA6MDA6MDAtMDQwMCIKICB9IF0sCiAgImh0dHBzOi8vd3d3Lm9tZy5vcmcvdGVjaHByb2Nlc3MvYWIvU3BlY2lmaWNhdGlvbk1ldGFkYXRhL2ZpbGVuYW1lIiA6IFsgewogICAgIkB2YWx1ZSIgOiAiQWJvdXQtQU1JNENDTSIKICB9IF0KfSwgewogICJAaWQiIDogImh0dHBzOi8vd3d3Lm9tZy5vcmcvdGVjaHByb2Nlc3MvYWIvU3BlY2lmaWNhdGlvbk1ldGFkYXRhL1NwZWNpZmljYXRpb24iLAogICJAdHlwZSIgOiBbICJodHRwOi8vd3d3LnczLm9yZy8yMDAyLzA3L293bCNDbGFzcyIgXQp9LCB7CiAgIkBpZCIgOiAiaHR0cHM6Ly93d3cub21nLm9yZy90ZWNocHJvY2Vzcy9hYi9TcGVjaWZpY2F0aW9uTWV0YWRhdGEvY2F0ZWdvcnkiLAogICJAdHlwZSIgOiBbICJodHRwOi8vd3d3LnczLm9yZy8yMDAyLzA3L293bCNBbm5vdGF0aW9uUHJvcGVydHkiIF0KfSwgewogICJAaWQiIDogImh0dHBzOi8vd3d3Lm9tZy5vcmcvdGVjaHByb2Nlc3MvYWIvU3BlY2lmaWNhdGlvbk1ldGFkYXRhL2NyZWF0aW9uRGF0ZSIsCiAgIkB0eXBlIiA6IFsgImh0dHA6Ly93d3cudzMub3JnLzIwMDIvMDcvb3dsI0Fubm90YXRpb25Qcm9wZXJ0eSIgXQp9LCB7CiAgIkBpZCIgOiAiaHR0cHM6Ly93d3cub21nLm9yZy90ZWNocHJvY2Vzcy9hYi9TcGVjaWZpY2F0aW9uTWV0YWRhdGEvZmlsZW5hbWUiLAogICJAdHlwZSIgOiBbICJodHRwOi8vd3d3LnczLm9yZy8yMDAyLzA3L293bCNBbm5vdGF0aW9uUHJvcGVydHkiIF0KfSwgewogICJAaWQiIDogImh0dHBzOi8vd3d3Lm9tZy5vcmcvdGVjaHByb2Nlc3MvYWIvU3BlY2lmaWNhdGlvbk1ldGFkYXRhL3B1YmxpY2F0aW9uRGF0ZSIsCiAgIkB0eXBlIiA6IFsgImh0dHA6Ly93d3cudzMub3JnLzIwMDIvMDcvb3dsI0Fubm90YXRpb25Qcm9wZXJ0eSIgXQp9LCB7CiAgIkBpZCIgOiAiaHR0cHM6Ly93d3cub21nLm9yZy90ZWNocHJvY2Vzcy9hYi9TcGVjaWZpY2F0aW9uTWV0YWRhdGEvc3BlY2lmaWNhdGlvbkFiYnJldmlhdGlvbiIsCiAgIkB0eXBlIiA6IFsgImh0dHA6Ly93d3cudzMub3JnLzIwMDIvMDcvb3dsI0Fubm90YXRpb25Qcm9wZXJ0eSIgXQp9LCB7CiAgIkBpZCIgOiAiaHR0cHM6Ly93d3cub21nLm9yZy90ZWNocHJvY2Vzcy9hYi9TcGVjaWZpY2F0aW9uTWV0YWRhdGEvc3BlY2lmaWNhdGlvbkFic3RyYWN0IiwKICAiQHR5cGUiIDogWyAiaHR0cDovL3d3dy53My5vcmcvMjAwMi8wNy9vd2wjQW5ub3RhdGlvblByb3BlcnR5IiBdCn0sIHsKICAiQGlkIiA6ICJodHRwczovL3d3dy5vbWcub3JnL3RlY2hwcm9jZXNzL2FiL1NwZWNpZmljYXRpb25NZXRhZGF0YS9zcGVjaWZpY2F0aW9uVGl0bGUiLAogICJAdHlwZSIgOiBbICJodHRwOi8vd3d3LnczLm9yZy8yMDAyLzA3L293bCNBbm5vdGF0aW9uUHJvcGVydHkiIF0KfSwgewogICJAaWQiIDogImh0dHBzOi8vd3d3Lm9tZy5vcmcvdGVjaHByb2Nlc3MvYWIvU3BlY2lmaWNhdGlvbk1ldGFkYXRhL3NwZWNpZmljYXRpb25VUkwiLAogICJAdHlwZSIgOiBbICJodHRwOi8vd3d3LnczLm9yZy8yMDAyLzA3L293bCNBbm5vdGF0aW9uUHJvcGVydHkiIF0KfSBdPC9zY3JpcHQ+CgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvanMvcHJpdmFjeS5qcyI+PC9zY3JpcHQ+CgogICAgPCEtLSBIRUFEIElOQ0xVREUgQkVHSU4gLS0+CiAgICA8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9IklFPWVkZ2UiPgoKICAgIDwhLS0gTW9iaWxlIFNwZWNpZmljIE1ldGFzCiAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAtLT4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsaW5pdGlhbC1zY2FsZT0xLjAsbWF4aW11bS1zY2FsZT0xLjAsdXNlci1zY2FsYWJsZT0wIj4KCiAgICA8IS0tIEdvb2dsZSBXZWIgRm9udHMKICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IC0tPgogICAgPGxpbmsgaHJlZj0iLy9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUFudG9ufE11bGk6MzAwLDQwMCw0MDBpdGFsaWMsMzAwaXRhbGljfE9zd2FsZCIgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyI+CgogICAgPCEtLSBHb29nbGUgdGFnIChndGFnLmpzKSAtLT4KICAgIDxzY3JpcHQgYXN5bmMgc3JjPSJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ndGFnL2pzP2lkPUctM0ZSNjVWTEtWVyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0PgogICAgICAgIHdpbmRvdy5kYXRhTGF5ZXIgPSB3aW5kb3cuZGF0YUxheWVyIHx8IFtdOwoKICAgICAgICBmdW5jdGlvbiBndGFnKCkgewogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaChhcmd1bWVudHMpOwogICAgICAgIH0KCiAgICAgICAgZ3RhZygnanMnLCBuZXcgRGF0ZSgpKTsKICAgICAgICBndGFnKCdjb25maWcnLCAnRy0zRlI2NVZMS1ZXJyk7CiAgICA8L3NjcmlwdD4KICAgIDwhLS0gR29vZ2xlIFRhZyBNYW5hZ2VyIC0tPgogICAgPHNjcmlwdD4KICAgICAgICAoZnVuY3Rpb24gKHcsIGQsIHMsIGwsIGkpIHsKICAgICAgICAgICAgd1tsXSA9IHdbbF0gfHwgW107CiAgICAgICAgICAgIHdbbF0ucHVzaCh7J2d0bS5zdGFydCc6IG5ldyBEYXRlKCkuZ2V0VGltZSgpLCBldmVudDogJ2d0bS5qcyd9KTsKICAgICAgICAgICAgdmFyIGYgPSBkLmdldEVsZW1lbnRzQnlUYWdOYW1lKHMpWzBdLCBqID0gZC5jcmVhdGVFbGVtZW50KHMpLCBkbCA9IGwgIT0gJ2RhdGFMYXllcicgPyAnJmw9JyArIGwgOiAnJzsKICAgICAgICAgICAgai5hc3luYyA9IHRydWU7CiAgICAgICAgICAgIGouc3JjID0gJ2h0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL2d0bS5qcz9pZD0nICsgaSArIGRsOwogICAgICAgICAgICBmLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGosIGYpOwogICAgICAgIH0pKHdpbmRvdywgZG9jdW1lbnQsICdzY3JpcHQnLCAnZGF0YUxheWVyJywgJ0dUTS1QNjdGMzVaJyk7CiAgICA8L3NjcmlwdD4KICAgIDwhLS0gRW5kIEdvb2dsZSBUYWcgTWFuYWdlciAtLT4KCiAgICA8IS0tIEdsb2JhbCBTaXRlIFRhZyAoZ3RhZy5qcykgLSBHb29nbGUgQW5hbHl0aWNzIC0tPgogICAgPHNjcmlwdCBhc3luYyBzcmM9Imh0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL2d0YWcvanM/aWQ9VUEtMTA2OTQxNDg4LTEiPjwvc2NyaXB0PgogICAgPHNjcmlwdD4KICAgICAgICB3aW5kb3cuZGF0YUxheWVyID0gd2luZG93LmRhdGFMYXllciB8fCBbXTsKCiAgICAgICAgZnVuY3Rpb24gZ3RhZygpIHsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goYXJndW1lbnRzKQogICAgICAgIH0KCiAgICAgICAgZ3RhZygnanMnLCBuZXcgRGF0ZSgpKTsKICAgICAgICBndGFnKCdjb25maWcnLCAnVUEtMTA2OTQxNDg4LTEnKTsKICAgIDwvc2NyaXB0PgogICAgPCEtLSBHb29nbGUgQW5hbHl0aWNzIC0tPgoKICAgIDwhLS0gQ1NTCiAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAtLT4KICAgIDwhLS0gQmFzZSArIFZlbmRvcnMgQ1NTIC0tPgogICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9jc3MvYm9vdHN0cmFwLm1pbi5jc3MiIHJlbD0ic3R5bGVzaGVldCI+CiAgICA8bGluayBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL2Nzcy9mb250cy9mb250LWF3ZXNvbWUvY3NzL2ZvbnQtYXdlc29tZS5jc3MiIHJlbD0ic3R5bGVzaGVldCI+CiAgICA8bGluayBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL3ZlbmRvci9vd2wtY2Fyb3VzZWwvb3dsLmNhcm91c2VsLmNzcyIgbWVkaWE9InNjcmVlbiIgcmVsPSJzdHlsZXNoZWV0Ij4KICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvdmVuZG9yL293bC1jYXJvdXNlbC9vd2wudGhlbWUuY3NzIiBtZWRpYT0ic2NyZWVuIiByZWw9InN0eWxlc2hlZXQiPgogICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy92ZW5kb3IvbWFnbmlmaWMtcG9wdXAvbWFnbmlmaWMtcG9wdXAuY3NzIiBtZWRpYT0ic2NyZWVuIiByZWw9InN0eWxlc2hlZXQiPgogICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy92ZW5kb3IvbWVkaWFlbGVtZW50L21lZGlhZWxlbWVudHBsYXllci5jc3MiIHJlbD0ic3R5bGVzaGVldCIvPgoKICAgIDwhLS0gVGhlbWUgQ1NTLS0+CiAgICA8bGluayBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL2Nzcy90aGVtZS5jc3MiIHJlbD0ic3R5bGVzaGVldCI+CiAgICA8bGluayBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL2Nzcy90aGVtZS1lbGVtZW50cy5jc3MiIHJlbD0ic3R5bGVzaGVldCI+CiAgICA8bGluayBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL2Nzcy9hbmltYXRlLm1pbi5jc3MiIHJlbD0ic3R5bGVzaGVldCI+CgogICAgPCEtLSBTa2luIENTUyAtLT4KICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvY3NzL3NraW5zL3RlYWwuY3NzIiByZWw9InN0eWxlc2hlZXQiPgoKICAgIDwhLS0gQ3VzdG9tIENTUy0tPgogICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9jc3MvY3VzdG9tLmNzcyIgcmVsPSJzdHlsZXNoZWV0Ij4KCiAgICA8IS0tIEhlYWQgTGlicyAtLT4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL3d3dy5vbWcub3JnL3ZlbmRvci9tb2Rlcm5penIuanMiPjwvc2NyaXB0PgoKICAgIDwhLS1baWYgbHQgSUUgOV0+CiAgICA8c2NyaXB0IHNyYz0iaHR0cDovL2h0bWw1c2hpbS5nb29nbGVjb2RlLmNvbS9zdm4vdHJ1bmsvaHRtbDUuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9InZlbmRvci9yZXNwb25kLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8IVtlbmRpZl0tLT4KCiAgICA8IS0tW2lmIElFXT4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iY3NzL2llLmNzcyI+CiAgICA8IVtlbmRpZl0tLT4KCiAgICA8IS0tIEZhdmljb25zCiAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAtLT4KICAgIDxsaW5rIHJlbD0ic2hvcnRjdXQgaWNvbiIgaHJlZj0iLy93d3cub21nLm9yZy9pbWFnZXMvZmF2aWNvbi5pY28iPgogICAgPGxpbmsgcmVsPSJpY29uIiBocmVmPSIvL3d3dy5vbWcub3JnL2ltYWdlcy9hcHBsZS10b3VjaC1pY29uLnBuZyI+CiAgICA8bGluayByZWw9Imljb24iIHNpemVzPSI3Mng3MiIgaHJlZj0iLy93d3cub21nLm9yZy9pbWFnZXMvYXBwbGUtdG91Y2gtaWNvbi03Mng3Mi5wbmciPgogICAgPGxpbmsgcmVsPSJpY29uIiBzaXplcz0iMTE0eDExNCIgaHJlZj0iLy93d3cub21nLm9yZy9pbWFnZXMvYXBwbGUtdG91Y2gtaWNvbi0xMTR4MTE0LnBuZyI+CiAgICA8bGluayByZWw9Imljb24iIHNpemVzPSIxNDR4MTQ0IiBocmVmPSIvL3d3dy5vbWcub3JnL2ltYWdlcy9hcHBsZS10b3VjaC1pY29uLTE0NHgxNDQucG5nIj4KCiAgICA8IS0tIHNvcnRhYmxlIHRhYmxlcyAtLT4KICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vdW5wa2cuY29tL2Jvb3RzdHJhcC10YWJsZUAxLjE4LjMvZGlzdC9ib290c3RyYXAtdGFibGUubWluLmNzcyIgcmVsPSJzdHlsZXNoZWV0Ij4KCiAgICA8IS0tIEluc3RhbmNlQmVnaW5FZGl0YWJsZSBuYW1lPSJoZWFkIiAtLT4KICAgIDwhLS0gSW5zdGFuY2VFbmRFZGl0YWJsZSAtLT4KICAgIDxzdHlsZSBpZD0iZml0LXZpZHMtc3R5bGUiPgogICAgICAgIC5mbHVpZC13aWR0aC12aWRlby13cmFwcGVye3dpZHRoOjEwMCU7cG9zaXRpb246cmVsYXRpdmU7cGFkZGluZzowO30KICAgICAgICAuZmx1aWQtd2lkdGgtdmlkZW8td3JhcHBlciBpZnJhbWUsLmZsdWlkLXdpZHRoLXZpZGVvLXdyYXBwZXIgb2JqZWN0LC5mbHVpZC13aWR0aC12aWRlby13cmFwcGVyIGVtYmVkIHtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTt9CiAgICA8L3N0eWxlPgogICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAuc3QtaW5zdGFsbC1VSndrbVB6Z2pIQkN4SHl4ekNhaiAuc3QtdWktcmVzdWx0LAogICAgICAgIC5zdC11aS10eXBlLWhlYWRpbmcgeyBjb2xvcjojMDA4OWQ3ICFpbXBvcnRhbnQgfQogICAgICAgIC5zdC1pbnN0YWxsLVVKd2ttUHpnakhCQ3hIeXh6Q2FqIC5zdC11aS1yZXN1bHQgZW0ge2ZvbnQtc3R5bGU6bm9ybWFsOyBmb250LXdlaWdodDpib2xkOyBiYWNrZ3JvdW5kLWNvbG9yOiNmNmZjZmUgIWltcG9ydGFudH0KCiAgICAgICAgdWwuZGQtbGlzdCB7CiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7CiAgICAgICAgfQogICAgPC9zdHlsZT4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii8vc2NyaXB0LmNyYXp5ZWdnLmNvbS9wYWdlcy9zY3JpcHRzLzAxMDQvODYxNy5qcyIgYXN5bmM9ImFzeW5jIj48L3NjcmlwdD4KICAgIDwhLS0gSEVBRCBJTkNMVURFIEVORCAtLT4KCjwvaGVhZD4KPGJvZHkgb25sb2FkPSJnZXRPTUdDb29raWUoJ29tZ3ByaXZhY3knKTsiPgoKICAgIDwhLS0gR29vZ2xlIFRhZyBNYW5hZ2VyIChub3NjcmlwdCkgLS0+CiAgICA8bm9zY3JpcHQ+CiAgICAgICAgPGlmcmFtZSBzcmM9Imh0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL25zLmh0bWw/aWQ9R1RNLVA2N0YzNVoiIGhlaWdodD0iMCIgd2lkdGg9IjAiIHN0eWxlPSJkaXNwbGF5Om5vbmU7dmlzaWJpbGl0eTpoaWRkZW4iPjwvaWZyYW1lPgogICAgPC9ub3NjcmlwdD4KICAgIDwhLS0gRW5kIEdvb2dsZSBUYWcgTWFuYWdlciAobm9zY3JpcHQpIC0tPgoKICAgIDwhLS0gQk9EWSBIRUFERVIgSU5DTFVERSBCRUdJTiAtLT4KICAgIDxoZWFkZXIgY2xhc3M9ImhlYWRlciBoZWFkZXItZGVmYXVsdCI+CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyLXRvcCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJoZWFkZXItdG9wLWxlZnQiPgogICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iaGVhZGVyLXRvcC1uYXYiPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9pbmRleC5odG0iPjxzcGFuIHN0eWxlPSJjb2xvcjp3aGl0ZSI+SG9tZTwvc3Bhbj48L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxpIGNsYXNzPSJmYSBmYS1sb2NrIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPjxhIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ0hvbWUnLCAnY2xpY2snLCAnTWVtYmVyIEFyZWEgTG9naW4nKTsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL21lbWJlcnMvIj48c3BhbiBzdHlsZT0iY29sb3I6d2hpdGUiPk1lbWJlciBBcmVhIExvZ2luPC9zcGFuPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLTxsaT48YSBvbkNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdIb21lJywgJ2NsaWNrJywgJ0xlZ2FsJyk7IiBocmVmPSJsZWdhbC9pbmRleC5odG0iPjxzcGFuIHN0eWxlPSJjb2xvcjp3aGl0ZSI+TGVnYWw8L3NwYW4+PC9hPjwvbGk+LS0+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImhlYWRlci10b3AtbmF2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPiZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnSG9tZScsICdjbGljaycsICdCbG9nIEljb24nKTsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwczovL3d3dy5vYmplY3RtYW5hZ2VtZW50Z3JvdXAub3JnL2Jsb2cvP19faHN0Yz0xMDg4ODI2NTMuYzU3ZjcyZmQ4YTdkNDEzZTQ3MzM0YTQwMWVhNTdjNTUuMTY4OTE5NDM4NjM3NC4xNzE1NjMzNzU3NDI4LjE3MTc5NzQ2NTM3OTQuMjkzJmFtcDtfX2hzc2M9MTA4ODgyNjUzLjEzLjE3MTc5NzQ2NTM3OTQmYW1wO19faHNmcD0zMTk0OTI4NzEwIj48aQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZmEgZmEtcGVuY2lsLXNxdWFyZS1vIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPjwvYT4mbmJzcDsmbmJzcDs8YQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdIb21lJywgJ2NsaWNrJywgJ0JyaWdodFRhbGsnKTsiIGhyZWY9Imh0dHBzOi8vd3d3LmJyaWdodHRhbGsuY29tL2NoYW5uZWwvMTIyMzEvIj48aQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZmEgZmEtYm9sZCIgYXJpYS1oaWRkZW49InRydWUiPjwvaT48L2E+Jm5ic3A7Jm5ic3A7PGEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnSG9tZScsICdjbGljaycsICdMaW5rZWRJbicpOyIgaHJlZj0iaHR0cHM6Ly9zZy5saW5rZWRpbi5jb20vY29tcGFueS9vbWciPjxpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmYSBmYS1saW5rZWRpbiIgYXJpYS1oaWRkZW49InRydWUiPjwvaT48L2E+Jm5ic3A7Jm5ic3A7PGEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnSG9tZScsICdjbGljaycsICdUd2l0dGVyJyk7IiBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL29iamVjdG1nbXRncm91cCI+PGkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImZhLWJyYW5kcyBmYS14LXR3aXR0ZXIiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+PC9hPiZuYnNwOyZuYnNwOzxhCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ0hvbWUnLCAnY2xpY2snLCAnWW91dHViZScpOyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vdXNlci9PYmplY3RNZ210R3JvdXAvdmlkZW9zIj48aSBjbGFzcz0iZmEgZmEteW91dHViZSIgYXJpYS1oaWRkZW49InRydWUiPjwvaT48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyLXRvcC1yaWdodCI+PCEtLSBBZGRTZWFyY2ggLS0+CgogICAgICAgICAgICAgICAgICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FkZHNlYXJjaC5jb20vanMvP2tleT1hNzdmYjFlYjJjM2M4ZmFmZTJiMzAxODI0MzY5ZWQ5NyZhbXA7Y2F0ZWdvcmllcz0weHd3dy5vbWcub3JnIj48L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgdmFsdWU9IiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogYXV0bzsgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJnF1b3Q7Ly9hZGRzZWFyY2guY29tL2xvZ28vQUFBQUFBLTIwLnBuZyZxdW90Oyk7IGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7IGJhY2tncm91bmQtcG9zaXRpb246IDk1JSA1MCU7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgd2lkdGg6IDE5MHB4OyBoZWlnaHQ6IDE2cHg7IHBhZGRpbmc6IDdweCAxMXB4IDdweCAyOHB4OyBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMjUpOyBmb250LXdlaWdodDogNDAwOyBjb2xvcjogcmdiKDU5LCA2OSwgNzkpOyBmb250LXNpemU6IDE0cHg7IGxpbmUtaGVpZ2h0OiAxNnB4OyBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsgYm9yZGVyLXJhZGl1czogNXB4OyBib3gtc2hhZG93OiBub25lOyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImFkZHNlYXJjaCBhZGRzZWFyY2gtd3JpdHRlbiIgZGF0YS1hZGRzZWFyY2gtZmllbGQ9InRydWUiIGF1dG9jb21wbGV0ZT0ib2ZmIiBhcmlhLWxhYmVsPSJTZWFyY2ggZmllbGQiPgoKICAgICAgICAgICAgICAgICAgICA8IS0tIEFkZFNlYXJjaCAtLT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJoZWFkZXItbWFpbiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciIgPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8IURPQ1RZUEUgaHRtbD48aHRtbD48aGVhZD48dGl0bGU+TWVudSB8IE9iamVjdCBNYW5hZ2VtZW50IEdyb3VwPC90aXRsZT48bWV0YSBuYW1lPSJkZXNjcmlwdGlvbiIgY29udGVudD0iTWVudSAtIE9iamVjdCBNYW5hZ2VtZW50IEdyb3VwIi8+PC9oZWFkPjxib2R5PjxuYXYgY2xhc3M9Im5hdmJhciBuYXZiYXItZGVmYXVsdCBmaG1tIj4gIAkJCQkJCTxkaXYgY2xhc3M9Im5hdmJhci1oZWFkZXIiPiAgCQkJCQkJCTxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0ibmF2YmFyLXRvZ2dsZSI+ICAJCQkJCQkJCTxpIGNsYXNzPSJmYSBmYS1iYXJzIj48L2k+ICAJCQkJCQkJPC9idXR0b24+ICAJCQkJCQkJPCEtLSBMb2dvIC0tPiAgCQkJCQkJCTxkaXYgY2xhc3M9ImxvZ28iPiAgCQkJCQkJCQk8IS0tPGEgaHJlZj0iaW5kZXguaHRtIj48aW1nIHNyYz0iaW1hZ2VzL2xvZ29zL09NRy1sb2dvLXdlYi1zbS5zdmciIGFsdD0iT01HIGxvZ28iPjwvYT4tLT4gIAkJCQkJCQkJPGEgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9pbmRleC5odG0iPjxpbWcgc3JjPSJodHRwczovL3d3dy5vbWcub3JnL2ltYWdlcy9sb2dvcy9PTUctbG9nby13ZWItc20uc3ZnIiBhbHQ9Ik9NRyBsb2dvIj48L2E+ICAJCQkJCQkJCSAgCQkJCQkJCTwvZGl2PiAgCQkJCQkJCTwhLS0gTG9nbyAvIEVuZCAtLT4gIAkJCQkJCTwvZGl2PjwhLS0gZW5kIG5hdmJhci1oZWFkZXIgLS0+ICAgIAkJCQkJCTxkaXYgaWQ9Im1haW4tbmF2IiBjbGFzcz0ibmF2YmFyLWNvbGxhcHNlIGNvbGxhcHNlIj4gIAkJCQkJCQk8dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2Ij4gIAkJCQkJCSAgCQkJCQkJCQk8IS0tIEFib3V0IC0tPiAgCQkJCQkJCQkgIAkJCQkJCQkgPGxpIGNsYXNzPSJkcm9wZG93biI+ICAJCQkJCQkJCQk8YSBocmVmPSIjIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiPkFib3V0IFVzIDxiIGNsYXNzPSJjYXJldCI+PC9iPjwvYT4gIAkJCQkJCQkJCTx1bCBjbGFzcz0iZHJvcGRvd24tbWVudSIgcm9sZT0ibWVudSI+ICAJCQkJCQkJCQkJPGxpPjxhIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ0hvbWUnLCAnY2xpY2snLCAnTUVOVSBBYm91dCBPdmVydmlldycpOyIgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9hYm91dC8iPk92ZXJ2aWV3PC9hPjwvbGk+ICAJCQkJCQkJCQkJCQkJCSAgCQkJCQkJCQkJCQkJCQk8bGk+PGEgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnSG9tZScsICdjbGljaycsICdNRU5VIFN0YWZmJyk7IiBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL2Fib3V0L3N0YWZmLmh0bSI+TWVldCBvdXIgU3RhZmY8L2E+PC9saT4gIAkJCQkJCQkJCQkJCQkJPGxpPjxhIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ0hvbWUnLCAnY2xpY2snLCAnTUVOVSBTdHJ1Y3R1cmUnKTsiIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvYWJvdXQvc3RydWN0dXJlLWFuZC1nb3Zlcm5hbmNlLmh0bSI+U3RydWN0dXJlIGFuZCBHb3Zlcm5hbmNlPC9hPjwvbGk+ICAJCQkJCQkJCQkJCQkJCTxsaT48YSBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdIb21lJywgJ2NsaWNrJywgJ1NETyBTdGFuZGFyZHMgUHJvY2VzcycpOyIgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9hYm91dC9zZG8tc3RhbmRhcmRzLXByb2Nlc3MuaHRtIj5TRE8gU3RhbmRhcmRzIFByb2Nlc3M8L2E+PC9saT4gIAkJCQkJCQkJCQk8bGk+PGEgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnSG9tZScsICdjbGljaycsICdNRU5VIE91ciBTcGVjaWZpY2F0aW9ucycpOyIgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9zcGVjLyI+T3VyIFNwZWNpZmljYXRpb25zPC9hPjwvbGk+ICAJCQkJCQkJCQkJPGxpPjxhIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ0hvbWUnLCAnY2xpY2snLCAnTUVOVSBPTUcgU3RvcnknKTsiIGhyZWY9Imh0dHBzOi8vd3d3Lm9iamVjdG1hbmFnZW1lbnRncm91cC5vcmcvIj5PTUcgU3Rvcnk8L2E+PC9saT4gIAkJCQkJCQkJCQkJCQk8L3VsPiAgCQkJCQkJCQkJCQkJPCEtLSBlbmQgcm93IC0tPiAgCQkJCQkJCQkJCSAgCQkJCQkJCQk8L2xpPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBBYm91dCBFbmRzIC0tPgkgIAkJCQkJCQkJICAJCQkJCQkJIDwhLS0gUHJvZ3JhbXMgLS0+ICAJCQkJCQkJCSAgCQkJCQkJCQk8bGkgY2xhc3M9ImRyb3Bkb3duIGRyb3Bkb3duLWxlZnQgZmhtbS1mdyI+ICAJCQkJCQkJCQk8YSBocmVmPSIjIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiPkdyb3VwcyA8YiBjbGFzcz0iY2FyZXQiPjwvYj48L2E+ICAJCQkJCQkJCQkgIAkJCQkJCQkJPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51IGhhbGYgaGFsZi1sZWZ0Ij4gIAkJCQkJCQkJCQk8bGkgY2xhc3M9ImZobW0tY29udGVudCB3aXRob3V0ZGVzYyI+ICAJCQkJCQkJCQkJCTxkaXYgY2xhc3M9InJvdyI+ICAJCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJjb2wtc20tNiI+ICAJCQkJCQkJCQkJCQk8aDMgY2xhc3M9InRpdGxlIj48YSBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL2Fib3V0L2R0Yy5odG0iPkRvbWFpbiBUZWNobm9sb2d5IENvbW1pdHRlZTwvYT48L2gzPiAgCQkJCQkJCQkJCQkJCTx1bD4gIAkJCQkJCQkJCQkJCQkJPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvYm1pLyI+QnVzaW5lc3M8L2E+PC9saT4gIAkJCQkJCQkJCQkJCQkJPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvb2NzLyI+Q2l2aWM8L2E+PC9saT4gIAkJCQkJCQkJCQkJCQkJPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvYzRpLyI+RGVmZW5zZSAmYW1wOyBNaWxpdGFyeTwvYT48L2xpPiAgCQkJCQkJCQkJCQkJCQk8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9mZHRmLyI+RmluYW5jaWFsIFNlY3RvcjwvYT48L2xpPiAgCQkJCQkJCQkJCQkJCQk8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9nb3YvIj5Hb3Zlcm5tZW50PC9hPjwvbGk+ICAJCQkJCQkJCQkJCQkJCTxsaT48YSBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL2hlYWx0aGNhcmUvIj5IZWFsdGhjYXJlPC9hPjwvbGk+ICAJCQkJCQkJCQkJCQkJCTxsaT48YSBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL21hbnRpcy8iPk1hbnVmYWN0dXJpbmc8L2E+PC9saT4gIAkJCQkJCQkJCQkJCQkJPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvbWF0aHMvIj5NYXRoZW1hdGljYWw8L2E+PC9saT4gIAkJCQkJCQkJCQkJCQkJPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvcmV0YWlsLyI+UmV0YWlsPC9hPjwvbGk+ICAJCQkJCQkJCQkJCQkJCTxsaT48YSBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL3JvYm90aWNzLyI+Um9ib3RpY3M8L2E+PC9saT4gIAkJCQkJCQkJCQkJCQkJPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvc3BhY2UvIj5TcGFjZTwvYT48L2xpPiAgCQkJCQkJCQkJCQkJCQk8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9zeXNlbmcvIj5TeXN0ZW1zIEVuZ2luZWVyaW5nPC9hPjwvbGk+ICAJCQkJCQkJCQkJCQkJCTxsaT48YSBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL3VhZi8iPlVuaWZpZWQgQXJjaGl0ZWN0dXJlIEZyYW1ld29yazwvYT48L2xpPiAgCQkJCQkJCQkJCQkJCQkgIAkJCQkJCQkJCQkJCQkJICAJCQkJCQkJCQkJCQkJPC91bD4gIAkJCQkJCQkJCQkJCTwvZGl2PiAgCQkJCQkJCQkJCQkJPGRpdiBjbGFzcz0iY29sLXNtLTYiPiAgCQkJCQkJCQkJCQkJCTxoMyBjbGFzcz0idGl0bGUiPjxhIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvYWJvdXQvcHRjLmh0bSI+UGxhdGZvcm0gVGVjaG5vbG9neSBDb21taXR0ZWU8L2E+PC9oMz4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9hZ2VudC8iPkFnZW5jeTwvYT48L2xpPiAgCQkJCQkJCQkJCQkJCQk8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9haS8iPkFJPC9hPjwvbGk+ICAJCQkJCQkJCQkJCQkJCTxsaT48YSBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL2FkdGYvIj5BbmFseXNpcyAmYW1wOyBEZXNpZ248L2E+PC9saT4gIAkJCQkJCQkJCQkJCQkJPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvYWRtLyI+QXJjaGl0ZWN0dXJlLURyaXZlbiBNb2Rlcm5pemF0aW9uPC9hPjwvbGk+ICAJCQkJCQkJCQkJCQkJCSAgCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9jbG91ZC8iPkNsb3VkPC9hPjwvbGk+ICAJCQkJCQkJCQkJCQkJCTxsaT48YSBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL2Rkcy8iPkRhdGEgRGlzdHJpYnV0aW9uIFNlcnZpY2VzPC9hPjwvbGk+ICAJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL2VrZy8iPkVudGVycHJpc2UgS25vd2xlZGdlIEdyYXBoPC9hPjwvbGk+ICAJCQkJCQkJCQkJCQkJCTxsaT48YSBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL21ldGhvZHMtYW5kLXRvb2xzLyI+TWV0aG9kcyAmYW1wOyBUb29sczwvYT48L2xpPiAgCQkJCQkJCQkJCQkJCQk8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9tYXJzLyI+TWlkZGxld2FyZTwvYT48L2xpPiAgCQkJCQkJCQkJCQkJCQk8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9vbnRvbG9neS8iPk9udG9sb2d5PC9hPjwvbGk+ICAJCQkJCQkJCQkJCQkJCTxsaT48YSBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL3N5c2EvIj5TeXN0ZW1zIEFzc3VyYW5jZTwvYT48L2xpPiAgCQkJCQkJCQkJCQkJCQkgIAkJCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPiAgCQkJCQkJCQkJCQkJPC9kaXY+ICAJCQkJCQkJCQkJCTwvZGl2PjwhLS0gZW5kIHJvdyAtLT4gIAkJCQkJCQkJCQk8L2xpPjwhLS0gZW5kIGdyaWQgZGVtbyAtLT4gIAkJCQkJCQkJCTwvdWw+PCEtLSBlbmQgZHJvcCBkb3duIG1lbnUgLS0+ICAJCQkJCQkJCTwvbGk+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIFByb2dyYW1zIC0tPiAgCQkJCQkJCSAgCQkJCQkJCQkgIAkJCQkJPCEtLSBDZXJ0aWZpY2F0aW9ucyAtLT4gIAkJCQkJCQkJICAJCQkJCQkJIDxsaSBjbGFzcz0iZHJvcGRvd24iPiAgCQkJCQkJCQkJPGEgaHJlZj0iIyIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIj5DZXJ0aWZpY2F0aW9ucyA8YiBjbGFzcz0iY2FyZXQiPjwvYj48L2E+ICAJCQkJCQkJCQk8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUiIHJvbGU9Im1lbnUiPiAgCQkJCQkJCQkJCTxsaT48YSBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdjbGljaycsICdNRU5VIENFUlQgTUFJTicpOyIgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9jZXJ0aWZpY2F0aW9uLyI+T3ZlcnZpZXc8L2E+PC9saT4JCQkJICAJCQkJCQkJCQkJPGxpPjxhIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ2NsaWNrJywgJ01FTlUgT0NFQiAyJyk7IiBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL2NlcnRpZmljYXRpb24vYnBtLyI+QnVzaW5lc3MgUHJvY2VzcyBNYW5hZ2VtZW50PC9hPjwvbGk+ICAJCQkJCQkJCQkJPGxpPjxhIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ2NsaWNrJywgJ01FTlUgQ0JBJyk7IiBocmVmPSJodHRwczovL3d3dy5idXNpbmVzc2FyY2hpdGVjdHVyZWd1aWxkLm9yZy9wYWdlL2NlcnRpZmljYXRpb24iIHRhcmdldD0iX2JsYW5rIj5DZXJ0aWZpZWQgQnVzaW5lc3MgQXJjaGl0ZWN0PC9hPjwvbGk+ICAJCQkJCQkJCQkJPGxpPjxhIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ2NsaWNrJywgJ01FTlUgT0NTTVAnKTsiIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvY2VydGlmaWNhdGlvbi9zeXNtbC8iPlN5c3RlbXMgTW9kZWxpbmcgTGFuZ3VhZ2U8L2E+PC9saT4gIAkJCQkJCQkJCQk8bGk+PGEgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnY2xpY2snLCAnTUVOVSBPQ1VQIDInKTsiIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvY2VydGlmaWNhdGlvbi91bWwvIj5VbmlmaWVkIE1vZGVsaW5nIExhbmd1YWdlPC9hPjwvbGk+ICAJCQkJCQkJCQkJPGxpPjxhIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ2NsaWNrJywgJ01FTlUgVHJhaW5pbmcnKTsiIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvY2VydGlmaWNhdGlvbi90cmFpbmluZy8iPlRyYWluaW5nPC9hPjwvbGk+ICAJCQkJCQkJCQkJPGxpPjxhIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ0hvbWUnLCAnY2xpY2snLCAnTUVOVSBEaXNjb3VudHMnKTsiIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvY2VydGlmaWNhdGlvbi9jZXJ0aWZpY2F0aW9uLWV4YW0tZGlzY291bnRzLyI+RXhhbSBEaXNjb3VudHM8L2E+PC9saT4JCQkJICAJCQkJCQkJCQkJPGxpPjxhIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ2NsaWNrJywgJ01FTlUgQlBNcGx1cyBDZXJ0IFNwb25zb3JzaGlwJyk7IiBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL2NlcnRpZmljYXRpb24vYnBtL3Nwb25zb3JzaGlwLyI+QlBNJiM0MzsgU3BvbnNvcnNoaXA8L2E+PC9saT4gIAkJCQkJCQkJCQk8bGk+PGEgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnY2xpY2snLCAnTUVOVSBTeXNNTCBDZXJ0IFNwb25zb3JzaGlwJyk7IiBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL2NlcnRpZmljYXRpb24vc3lzbWwvc3BvbnNvcnNoaXAiPlN5c01MIFNwb25zb3JzaGlwPC9hPjwvbGk+ICAJCQkJCQkJCQkJPGxpPjxhIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ2NsaWNrJywgJ01FTlUgVUFGIENlcnQgU3BvbnNvcnNoaXAnKTsiIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvY2VydGlmaWNhdGlvbi91YWYvc3BvbnNvcnNoaXAvIj5VQUYgU3BvbnNvcnNoaXA8L2E+PC9saT4gIAkJCQkJCQkJCQk8bGk+PGEgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnY2xpY2snLCAnTUVOVSBDZXJ0aWZpZWQgUHJvZmVzc2lvbmFscyBEaXJlY3RvcnknKTsiIGhyZWY9Imh0dHBzOi8vd3d3LmNyZWRseS5jb20vb3JnYW5pemF0aW9ucy9vbWcvZGlyZWN0b3J5IiB0YXJnZXQ9Il9ibGFuayI+Q2VydGlmaWVkIFByb2Zlc3Npb25hbHMgRGlyZWN0b3J5PC9hPjwvbGk+ICAJCQkJCQkJCQkJCQkJPC91bD4gIAkJCQkJCQkJCQkJCTwhLS0gZW5kIHJvdyAtLT4gIAkJCQkJCQkJCQkgIAkJCQkJCQkJPC9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gQ2VydGlmaWNhdGlvbnMgLS0+ICAJCQkJCQkJCSAgCQkJCQkJCQkgIAkJCQkJCQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIFJlc291cmNlIEh1YiBtZW51IC0tPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duIj4gIAkJCQkJCQkJCTxhIGhyZWY9IiMiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSI+UmVzb3VyY2VzIDxiIGNsYXNzPSJjYXJldCI+PC9iPjwvYT4gIAkJCQkJCQkJCTx1bCBjbGFzcz0iZHJvcGRvd24tbWVudSIgcm9sZT0ibWVudSI+ICAJCQkJCQkJCQkJPGxpPjxhIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ2NsaWNrJywgJ01FTlUgQmxvZycpOyIgaHJlZj0iaHR0cHM6Ly93d3cub2JqZWN0bWFuYWdlbWVudGdyb3VwLm9yZy9ibG9nLyI+QmxvZzwvYT48L2xpPiAgCQkJCQkJCQkJCTxsaT48YSBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdjbGljaycsICdNRU5VIE9NRyBCcm9jaHVyZScpOyIgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9tZW1iZXJzZXJ2aWNlcy9PTUctYnJvY2h1cmUucGRmIj5Ccm9jaHVyZTwvYT48L2xpPiAgCQkJCQkJCQkJCTxsaT48YSBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdjbGljaycsICdNRU5VIEV2ZW50cycpOyIgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9ldmVudHMvaW5kZXguaHRtIj5FdmVudHM8L2E+PC9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAJCQkJCQkJCQkJPGxpPjxhIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ2NsaWNrJywgJ01FTlUgSm91cm5hbCBvZiBJbm5vdmF0aW9uJyk7IiBocmVmPSJodHRwczovL3d3dy5vYmplY3RtYW5hZ2VtZW50Z3JvdXAub3JnL2pvdXJuYWwtb2YtaW5ub3ZhdGlvbi8iPkpvdXJuYWwgb2YgSW5ub3ZhdGlvbjwvYT48L2xpPiAgCQkJCQkJCQkJCTxsaT48YSBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdjbGljaycsICdNRU5VIFByZXNzIFJvb20nKTsiIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvbmV3cy9wcmVzc3Jvb20uaHRtIj5QcmVzcyBSb29tPC9hPjwvbGk+ICAJCQkJCQkJCQkJPGxpPjxhIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ2NsaWNrJywgJ01FTlUgUHJvY2Vzc2VzJyk7IiBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL2dldHRpbmdzdGFydGVkL3Byb2Nlc3NpbnRyby5odG0iPlByb2Nlc3NlczwvYT48L2xpPiAgCQkJCQkJCQkJCTxsaT48YSBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdjbGljaycsICdNRU5VIFB1YmxpYyBEb2N1bWVudCBTZWFyY2gnKTsiIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvY2dpLWJpbi9hcHBzL2RvY2xpc3QucGwiPlB1YmxpYyBEb2N1bWVudCBTZWFyY2g8L2E+PC9saT4gIAkJCQkJCQkJCQk8bGk+PGEgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnY2xpY2snLCAnTUVOVSBNZW1iZXIgRG9jdW1lbnQgU2VhcmNoJyk7IiBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL21lbWJlcnNfZG9jc2VhcmNoLmh0bSI+TWVtYmVyIERvY3VtZW50IFNlYXJjaDwvYT48L2xpPiAgCQkJCQkJCQkJCSAgCQkJCQkJCQkJCTxsaT48YSBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdjbGljaycsICdNRU5VIFRlcm1zQWNyb255bXMnKTsiIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvZ2V0dGluZ3N0YXJ0ZWQvdGVybXNfYW5kX2Fjcm9ueW1zLmh0bSI+VGVybXMgJmFtcDsgQWNyb255bXMgPC9hPjwvbGk+ICAJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLTxsaT48YSBvbkNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdjbGljaycsICdNRU5VIFZlbmRvciBEaXJlY3RvcmllcycpOyIgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9vbWctZGlyZWN0b3JpZXMuaHRtIj5WZW5kb3IgRGlyZWN0b3JpZXM8L2E+PC9saT4tLT4gIAkJCQkJCQkJCQkgIAkJCQkJCQkJCQk8bGk+PGEgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnY2xpY2snLCAnTUVOVSBXZWJpbmFycycpOyIgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy93ZWJpbmFycy9pbmRleC5odG0iPldlYmluYXJzPC9hPjwvbGk+ICAJCQkJCQkJCQkgICAgCQkJCQkJCQkJPC91bD4gIAkJCQkJCQkJPC9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gUmVzb3VyY2UgSHViIG1lbnUgLS0+ICAgIAkJCQkJCQkJCTwhLS0gU3BlY3MgLS0+ICAJCQkJCQkJCTxsaSBjbGFzcz0iZHJvcGRvd24iPiAgCQkJCQkJCQkJPGEgaHJlZj0iIyIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIj5TcGVjaWZpY2F0aW9ucyA8YiBjbGFzcz0iY2FyZXQiPjwvYj48L2E+ICAJCQkJCQkJCQk8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUiIHJvbGU9Im1lbnUiPiAgCQkJCQkJCQkJCQkJICAgICA8bGk+PGEgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnY2xpY2snLCAnTUVOVSBQb3B1bGFyJyk7IiBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL2Fib3V0L29tZy1zdGFuZGFyZHMtaW50cm9kdWN0aW9uLmh0bSI+UG9wdWxhcjwvYT48L2xpPiAgCQkJCQkJCQkJCQkJCSA8bGk+PGEgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnY2xpY2snLCAnTUVOVSBDYXRhbG9nJyk7IiBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL3NwZWMvIj5DYXRhbG9nPC9hPjwvbGk+ICAJCQkJCQkJCQkJCQkJIDxsaT48YSBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdjbGljaycsICdNRU5VIEluIFByb2dyZXNzJyk7IiBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL3B1YmxpY19zY2hlZHVsZS8iPkluIFByb2dyZXNzPC9hPjwvbGk+ICAJCQkJCQkJCQkJCQkJIDxsaT48YSBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdjbGljaycsICdNRU5VIElzc3VlcycpOyIgaHJlZj0iaHR0cHM6Ly9pc3N1ZXMub21nLm9yZy9pc3N1ZXMvbGlzdHMiPklzc3VlczwvYT48L2xpPiAgCQkJCQkJCQkJCQkJCSA8bGk+PGEgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnY2xpY2snLCAnTUVOVSBSZXBvcnQgSXNzdWVzJyk7IiBocmVmPSJodHRwczovL2lzc3Vlcy5vbWcub3JnL2lzc3Vlcy9jcmVhdGUtbmV3LWlzc3VlIj5SZXBvcnQgSXNzdWUocyk8L2E+PC9saT4gIAkJCQkJCQkJCQkJCQk8bGk+PGEgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnY2xpY2snLCAnTUVOVSBSRkMgQ29tbWVudHMnKTsiIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvdGVjaG5vbG9neS9yZmMtZm9ybS5odG0iPlJGQyBDb21tZW50czwvYT48L2xpPiAgCQkJCQkJCQkJCQkJCTxsaT48YSBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdjbGljaycsICdNRU5VIFZvdGUgU3RhdHVzJyk7IiBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL3RlY2hwcm9jZXNzL2ZheHZvdGVzLyIgdGFyZ2V0PSJfYmxhbmsiPlZvdGUgU3RhdHVzPC9hPjwvbGk+ICAJCQkJCQkJCQkJCQkgICAgICAgCQkJCQkJCQkJCQkJICAgICA8bGk+PGEgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnY2xpY2snLCAnTUVOVSBBcmNoaXZlJyk7IiBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL3RlY2hub2xvZ3kvZG9jdW1lbnRzL3ZhdWx0Lmh0bSI+QXJjaGl2ZTwvYT48L2xpPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkJCQkJCQkJCSAgPC91bD4gIAkJCQkJCQkJCQkJCSAgCQkJCQkJCQkJCTwvbGk+ICAJCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gU3BlY3MgLS0+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCTwhLS0gQ29tbXVuaXRpZXMgLS0+ICAJCQkJCQkJCSAgCQkJCQkJCSA8bGkgY2xhc3M9ImRyb3Bkb3duIj4gIAkJCQkJCQkJCTxhIGhyZWY9IiMiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSI+Q29tbXVuaXRpZXMgPGIgY2xhc3M9ImNhcmV0Ij48L2I+PC9hPiAgCQkJCQkJCQkJPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51IiByb2xlPSJtZW51Ij4gIAkJCQkJCQkJCQk8bGk+PGEgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnSG9tZScsICdjbGljaycsICdNRU5VIENvbW11bml0aWVzJyk7IiBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL2NvbW11bml0aWVzL2luZGV4Lmh0bSI+TWFuYWdlZCBDb21tdW5pdGllczwvYT48L2xpPiAgCQkJCQkJCQkJCTxsaT48YSBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdIb21lJywgJ2NsaWNrJywgJ01FTlUgQ29tbXVuaXRpZXMgRUtHJyk7IiBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL2NvbW11bml0aWVzL2VudGVycHJpc2Uta25vd2xlZGdlLWdyYXBoLWZvcnVtLmh0bSI+VGhlIEVudGVycHJpc2UgS25vd2xlZGdlIEdyYXBoIEZvcnVtPC9hPjwvbGk+ICAJCQkJCQkJCQkJPGxpPjxhIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ0hvbWUnLCAnY2xpY2snLCAnTUVOVSBDb21tdW5pdGllcyBNQlNFJyk7IiBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL2NvbW11bml0aWVzL21vZGVsLWJhc2VkLWFjcXVpc2l0aW9uLXVzZXItY29tbXVuaXR5Lmh0bSI+TW9kZWwtQmFzZWQgQWNxdWlzaXRpb24gVXNlciBHcm91cDwvYT48L2xpPiAgCQkJCQkJCQkJCTxsaT48YSBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdIb21lJywgJ2NsaWNrJywgJ01FTlUgQ29tbXVuaXRpZXMgU3lzRW5nJyk7IiBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL2NvbW11bml0aWVzL3N5c3RlbXMtbW9kZWxpbmctY29tbXVuaXR5Lmh0bSI+U3lzdGVtcyBNb2RlbGluZzwvYT48L2xpPiAgCQkJCQkJCQkJCSAgCQkJCQkJCQkJCQkJCTwvdWw+ICAJCQkJCQkJCQkJCQk8IS0tIGVuZCByb3cgLS0+ICAJCQkJCQkJCQkJICAJCQkJCQkJCTwvbGk+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIENvbW11bml0aWVzIC0tPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAJCQkJCQkJCTwhLS0gTWVtYmVyc2hpcCAtLT4gIAkJCQkJCQkJIDxsaSBjbGFzcz0iZHJvcGRvd24iPiAgCQkJCQkJCQkJPGEgaHJlZj0iIyIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIj5NZW1iZXJzaGlwIDxiIGNsYXNzPSJjYXJldCI+PC9iPjwvYT4gIAkJCQkJCQkJCTx1bCBjbGFzcz0iZHJvcGRvd24tbWVudSIgcm9sZT0ibWVudSI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnY2xpY2snLCAnTUVOVSBCZWNvbWUgYSBNZW1iZXInKTsiIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvbWVtYmVyc2VydmljZXMvaW5kZXguaHRtIj5CZWNvbWUgYSBNZW1iZXI8L2E+PC9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdjbGljaycsICdNRU5VIEN1cnJlbnQgTWVtYmVycycpOyIgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9jZ2ktYmluL2FwcHMvbWVtYmVyc2VhcmNoLnBsIj5DdXJyZW50IE1lbWJlcnM8L2E+PC9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdjbGljaycsICdNRU5VIE1lbWJlciBQYXJ0bmVycycpOyIgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9hYm91dC9saWFpc29uLmh0bSI+TGlhaXNvbnM8L2E+PC9saT4gICAgICAgIAkJCQkJCQkJPGxpPjxhIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ2NsaWNrJywgJ01FTlUgTWVtYmVyIFNwb25zb3JzaGlwJyk7IiBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL21lbWJlcnNlcnZpY2VzL3Nwb25zb3JzaGlwLmh0bSI+U3BvbnNvcnNoaXA8L2E+PC9saT4gIAkJCQkJCQkJCSAgCQkJCQkJCQkJPGxpPjxhIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ2NsaWNrJywgJ01FTlUgTG9nIEluJyk7IiBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL21lbWJlcnMvIj48aSBjbGFzcz0iZmEgZmEtbG9jayI+PC9pPkxvZy1JbjwvYT48L2xpPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ2NsaWNrJywgJ01FTlUgTG9nIEluIEFzc2lzdGFuY2UnKTsiIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvbG9naW4vaW5kZXguaHRtIj48aSBjbGFzcz0iZmEgZmEtdW5sb2NrIj48L2k+TG9nLUluIEFzc2lzdGFuY2U8L2E+PC9saT4gIAkJCQkJCQkJICAgPC91bD4gIAkJCQkJCQkJPC9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBNZW1iZXJzaGlwIC0tPiAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+PCEtLSBlbmQgbmF2IG5hdmJhci1uYXYgLS0+ICAJCQkJCQk8L2Rpdj48IS0tIGVuZCAjbWFpbi1uYXYgLS0+ICAgIAkJCQkJPC9uYXY+PCEtLSBlbmQgbmF2YmFyIG5hdmJhci1kZWZhdWx0IGZobW0gLS0+PC9ib2R5PjwvaHRtbD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2hlYWRlcj4KICAgIDwhLS0gQk9EWSBIRUFERVIgSU5DTFVERSBFTkQgLS0+CgoKPGRpdiBjbGFzcz0ibWFpbiIgcm9sZT0ibWFpbiI+IDwhLS0gTWFpbiAtLT4KICAgIDxzZWN0aW9uIGNsYXNzPSJwYWdlLWhlYWRpbmciIHJvbGU9Im5hdmlnYXRpb24iPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtOSI+CiAgICAgICAgICAgICAgICAgICAgPGgxPkFib3V0IHRoZSBBc3luY2hyb25vdXMgTWV0aG9kIEludm9jYXRpb24gZm9yIENDTSBTcGVjaWZpY2F0aW9uIFZlcnNpb24gMS4xPC9oMT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTMiPgogICAgICAgICAgICAgICAgICAgIDx1bCByb2xlPSJtZW51IiBjbGFzcz0iYnJlYWRjcnVtYiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSByb2xlPSJtZW51aXRlbSIgY2xhc3M9ImFjdGl2ZSI+MS4xPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpIHJvbGU9Im1lbnVpdGVtIiBjbGFzcz0iYWN0aXZlIgogICAgICAgICAgICAgICAgICAgICAgICA+QU1JNENDTTwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgICAgICAgICAgPGxpIHJvbGU9Im1lbnVpdGVtIj48YSBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL3NwZWMiPlNwZWNpZmljYXRpb25zPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvc2VjdGlvbj4KICAgIDxkaXYgY2xhc3M9InBhZ2UtY29udGVudCIgcm9sZT0iZGlyZWN0b3J5Ij4KICAgICAgICA8c2VjdGlvbiBpZD0iZG9jdW1lbnQtbWV0YWRhdGEiIHJvbGU9ImNvbXBsZW1lbnRhcnkiIGNsYXNzPSJjb250YWluZXIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICAgICAgICAgICAgPGgxIGNsYXNzPSJzcGVjLWFjcm9ueW0gY29sLW1kLTMiPkFNSTRDQ03ihKI8L2gxPgogICAgICAgICAgICAgICAgPGgxIGNsYXNzPSJzcGVjLW5hbWUiIHN0eWxlPSJ0ZXh0LXRyYW5zZm9ybTogbm9uZSI+QXN5bmNocm9ub3VzIE1ldGhvZCBJbnZvY2F0aW9uIGZvciBDQ008L2gxPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMSI+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtanVzdGlmeSI+VGhpcyBzcGVjaWZpY2F0aW9uIGRlZmluZXMgYSBtZWNoYW5pc20gdG8gcGVyZm9ybSBhc3luY2hyb25vdXMgbWV0aG9kIGludm9jYXRpb24gZm9yIENDTS48L3A+CiAgICAgICAgICAgICAgICAgICAgPGRsIGNsYXNzPSJkbC1ob3Jpem9udGFsIj4KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSB0aXRsZSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgPGR0PlRpdGxlOjwvZHQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkZD5Bc3luY2hyb25vdXMgTWV0aG9kIEludm9jYXRpb24gZm9yIENDTTwvZGQ+CgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIGFjcm9ueW0gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkdD5BY3JvbnltOjwvZHQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkZD5BTUk0Q0NN4oSiPC9kZD4KCiAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSB2ZXJzaW9uIC0tPgogICAgICAgICAgICAgICAgICAgICAgICA8ZHQ+VmVyc2lvbjo8L2R0PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPjEuMTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kZD4KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBkb2N1bWVudCBzdGF0dXMgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkdD5Eb2N1bWVudCBTdGF0dXM6PC9kdD4KICAgICAgICAgICAgICAgICAgICAgICAgPGRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbi1ib3R0b206IDA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS10b2dnbGU9InRvb2x0aXAiIGRhdGEtcGxhY2VtZW50PSJyaWdodCIgZGF0YS1jb250YWluZXI9J2JvZHknCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iRm9ybWFsIFNwZWNpZmljYXRpb25zIGhhdmUgYmVlbiBhcHByb3ZlZCBieSBPTUcgQm9hcmQgb2YgRGlyZWN0b3JzIGFuZCBoYXZlIGJlZW4gZWRpdGVkLiI+Zm9ybWFsIOKTmDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kZD4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gcHVibGljYXRpb24gZGF0ZSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgPGR0PlB1YmxpY2F0aW9uIERhdGU6PC9kdD4KICAgICAgICAgICAgICAgICAgICAgICAgPGRkPkF1Z3VzdCAyMDE1PC9kZD4KCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBjYXRlZ29yaWVzIC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGR0PkNhdGVnb3JpZXM6PC9kdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgcm9sZT0iZ3JvdXAiIGNsYXNzPSJsaXN0LWlubGluZSBkZC1saXN0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIHJvbGU9Imxpc3RpdGVtIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InRleHQtY2FwaXRhbGl6ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iYmFkZ2UgYmFkZ2UtaW5mbyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvc3BlYy9jYXRlZ29yeS9jb3JiYS1wbGF0Zm9ybSI+PGVtPkNvcmJhIFBsYXRmb3JtPC9lbT48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSByb2xlPSJsaXN0aXRlbSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJ0ZXh0LWNhcGl0YWxpemUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImJhZGdlIGJhZGdlLWluZm8iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL3NwZWMvY2F0ZWdvcnkvY29tcG9uZW50LWFyY2hpdGVjdHVyZSI+PGVtPkNvbXBvbmVudCBBcmNoaXRlY3R1cmU8L2VtPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIHJvbGU9Imxpc3RpdGVtIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InRleHQtY2FwaXRhbGl6ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iYmFkZ2UgYmFkZ2UtaW5mbyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvc3BlYy9jYXRlZ29yeS9kb21haW4iPjxlbT5Eb21haW48L2VtPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kZD4KICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gaXByIG1vZGUgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXRvZ2dsZT0idG9vbHRpcCIgZGF0YS1wbGFjZW1lbnQ9InJpZ2h0IiBkYXRhLWNvbnRhaW5lcj0nYm9keScgZGF0YS1odG1sPSJ0cnVlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iT01HJmFtcDsjMzk7cyBQb2xpY3kgb24gSW50ZWxsZWN0dWFsIFByb3BlcnR5IFJpZ2h0cyBpcyBkZXNpZ25lZCB0byBlbmFibGUgdGhlIG9wZW4gZGV2ZWxvcG1lbnQsIGRpc3NlbWluYXRpb24sIGFuZCB1c2Ugb2YgaXRzIHNwZWNpZmljYXRpb25zLCBhbmQgdGhlaXIgYnJvYWQgaW1wbGVtZW50YXRpb24gYW5kIHVwdGFrZS4gU3BlY2lmaWNhdGlvbnMsIGluY2x1ZGluZyBGaW5hbGl6YXRpb24vUmV2aXNpb24gVGFzayBGb3JjZSBSZXBvcnRzIGFyZSByZXF1aXJlZCB0byBoYXZlIGEgZGVjbGFyZWQgSW50ZWxsZWN0dWFsIFByb3BlcnR5IFJpZ2h0cyBzdGF0ZW1lbnQgYmFzZWQgb24gZWl0aGVyIFJBTkQsIFJGIG9uIExpbWl0ZWQgVGVybXMsIG9yIE5vbi1Bc3NlcnQuJmx0O2JyLyZndDtTZWUgdGhlIE9NRyBQb2xpY3kgU3RhdGVtZW50LCBJbnRlbGxlY3R1YWwgUHJvcGVydHkgUmlnaHRzLCBjbGljayB0aGUgbGluayBmb3IgZGV0YWlscy4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZG9jLm9tZy5vcmcvaXByIj5JUFIgTW9kZSDik5g8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2R0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS10b2dnbGU9InRvb2x0aXAiIGRhdGEtcGxhY2VtZW50PSJyaWdodCIgZGF0YS1jb250YWluZXI9J2JvZHknCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSJFYWNoIE9ibGlnYXRlZCBQYXJ0eSBpbiBhbiBSRiBvbiBMaW1pdGVkIFRlcm1zIElQUiBNb2RlIEFkb3B0aW9uIG9yIFJldmlzaW9uIFByb2Nlc3MgY292ZW5hbnRzIHRoYXQgaXQgd2lsbCBncmFudCB0byBhbiB1bnJlc3RyaWN0ZWQgbnVtYmVyIG9mIGFwcGxpY2FudHMgYSByb3lhbHR5IGFuZCBmZWUgZnJlZSwgbm9uZXhjbHVzaXZlLCB3b3JsZHdpZGUsIG5vbi1zdWJsaWNlbnNhYmxlLCBwZXJwZXR1YWwgcGF0ZW50IGxpY2Vuc2UgdG8gaXRzIEVzc2VudGlhbCBDbGFpbXMiPlJGLUxpbWl0ZWQg4pOYPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kZD4KICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8L2RsPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8IS0tIFNwZWNpZmljYXRpb24gZG9jdW1lbnRzIC0tPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTEiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luLWJvdHRvbTogNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImRvd25sb2FkLWRvY3VtZW50IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9zcGVjL0FNSTRDQ00vMS4xL1BERiIgdGl0bGU9IkNsaWNrIHRvIERvd25sb2FkIFNwZWNpZmljYXRvbiBEb2N1bWVudCIgZGF0YS1zcGVjPSJBTUk0Q0NNLzEuMSIgZGF0YS1sYWJlbD0iQU1JNENDTS8xLjEvUERGIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtZmlsZS1wZGYtbyBmYS0zeCI+PC9pPjxici8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU3BlY2lmaWNhdGlvbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGhyIGNsYXNzPSJjb250YWluZXLigJ0vIj4KICAgICAgICA8L3NlY3Rpb24+CgogICAgICAgIDwhLS0gVGFibGUgb2YgQ29udGVudHMgLS0+CiAgICAgICAgPHNlY3Rpb24gaWQ9InRvYyIgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgICAgIDxoMiByb2xlPSJoZWFkaW5nIiBhcmlhLWxldmVsPSIxIj5UYWJsZSBPZiBDb250ZW50czwvaDI+CiAgICAgICAgICAgIDx1bCByb2xlPSJkaXJlY3RvcnkiIGNsYXNzPSJ0b2MiPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJ0b2NsaW5lIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0idGV4dC1pbmZvIiBocmVmPSIjZG9jdW1lbnQtbWV0YWRhdGEiPkFib3V0IHRoZSBTcGVjaWZpY2F0aW9uPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0idG9jbGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InRleHQtaW5mbyIgaHJlZj0iI2NvbXBhbmllcyI+Q29tcGFuaWVzIHRoYXQgaGF2ZSBjb250cmlidXRlZCB0byB0aGUgZGV2ZWxvcG1lbnQgb2YgdGhpcyBTcGVjaWZpY2F0aW9uPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0idG9jbGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InRleHQtaW5mbyIgaHJlZj0iI2lzc3VlcyI+SXNzdWVzIGFzc29jaWF0ZWQgd2l0aCB0aGlzIHNwZWNpZmljYXRpb248L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJ0b2NsaW5lIj48YSBjbGFzcz0idGV4dC1pbmZvIiBocmVmPSIjZG9jdW1lbnRzIj5TcGVjaWZpY2F0aW9uIERvY3VtZW50czwvYT4KICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InRvYyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0idG9jbGluZSI+PGEgY2xhc3M9InRleHQtaW5mbyIgaHJlZj0iI2RvY3Mtbm9ybWF0aXZlLXN1cHBvcnRpbmciPk5vcm1hdGl2ZSBEb2N1bWVudHM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJ0b2NsaW5lIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJ0ZXh0LWluZm8iIGhyZWY9IiNkb2NzLW5vcm1hdGl2ZS1tYWNoaW5lIj5Ob3JtYXRpdmUgTWFjaGluZSBSZWFkYWJsZSBEb2N1bWVudHM8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0idG9jbGluZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0idGV4dC1pbmZvIiBocmVmPSIjZG9jcy1pbmZvcm1hdGl2ZS1zdXBwb3J0aW5nIj5JbmZvcm1hdGl2ZSBEb2N1bWVudHM8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJ0b2NsaW5lIj48YSBjbGFzcz0idGV4dC1pbmZvIiBocmVmPSIjc3BlYy12ZXJzaW9ucyI+SGlzdG9yeTwvYT4KICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InRvYyI+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InRvY2xpbmUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InRleHQtaW5mbyIgaHJlZj0iI3NwZWMtdmVyc2lvbnMtZm9ybWFsIj5Gb3JtYWwgVmVyc2lvbnM8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InRvY2xpbmUiPjxhIGNsYXNzPSJ0ZXh0LWluZm8iIGhyZWY9IiNpbnZlbnRvcnktbGlua3MiPkxpbmtzPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgPGhyIGNsYXNzPSJjb250YWluZXLigJ0vIj4KICAgICAgICA8L3NlY3Rpb24+CiAgICAgICAgPHNlY3Rpb24gaWQ9ImNvbXBhbmllcyIgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgICAgIDxoMiByb2xlPSJoZWFkaW5nIiBhcmlhLWxldmVsPSIxIj5Db21wYW5pZXMgdGhhdCBoYXZlIGNvbnRyaWJ1dGVkIHRvIHRoZSBkZXZlbG9wbWVudCBvZiB0aGlzIFNwZWNpZmljYXRpb248L2gyPgogICAgICAgICAgICA8dWwgcm9sZT0iZGlyZWN0b3J5IiBjbGFzcz0idG9jIj4KICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0idG9jbGluZSI+CiAgICAgICAgICAgICAgICAgICAgQ29weXJpZ2h0IMKpIDIwMTUKICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0idGV4dC1pbmZvIiBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL3NwZWMvY29tcGFueS9vYmplY3QtbWFuYWdlbWVudC1ncm91cC8iPk9iamVjdCBNYW5hZ2VtZW50IEdyb3VwPC9hPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0idG9jbGluZSI+CiAgICAgICAgICAgICAgICAgICAgQ29weXJpZ2h0IMKpIDIwMTEtMjAxNQogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJ0ZXh0LWluZm8iIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvc3BlYy9jb21wYW55L3JlbWVkeS1pdC8iPlJlbWVkeSBJVDwvYT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgIDxociBjbGFzcz0iY29udGFpbmVy4oCdLyI+CiAgICAgICAgPC9zZWN0aW9uPgogICAgICAgIDxzZWN0aW9uIGlkPSJpc3N1ZXMiIGNsYXNzPSJjb250YWluZXIiPgogICAgICAgICAgICA8aDIgcm9sZT0iaGVhZGluZyIgYXJpYS1sZXZlbD0iMSI+SXNzdWVzIGFzc29jaWF0ZWQgd2l0aCB0aGlzIHNwZWNpZmljYXRpb248L2gyPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIgaXNzdWVzLWxpbmtzIj4KICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJjb2wtbWQtMiI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9pc3N1ZXMub21nLm9yZy9pc3N1ZXMvc3BlYy9BTUk0Q0NNIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLWxpc3QgZmEtM3giPjwvaT48YnIvPgogICAgICAgICAgICAgICAgICAgICAgICBJc3N1ZXMgUmVwb3J0ZWQgaW4gdGhpcyBTcGVjaWZpY2F0aW9uCiAgICAgICAgICAgICAgICAgICAgPC9hPiZuYnNwOyZkYXNoOwogICAgICAgICAgICAgICAgICAgIDxici8+CiAgICAgICAgICAgICAgICAgICAgPGVtPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2lzc3Vlcy5vbWcub3JnL2lzc3Vlcy9zcGVjL0FNSTRDQ00vMS4xIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFZlcnNpb24gMS4xIG9ubHkKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZW0+CiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICA8cCBjbGFzcz0iY29sLW1kLTIiPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vaXNzdWVzLm9tZy5vcmcvaXNzdWVzL3NwZWMvQU1JNENDTS9maXhlZCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1mbGFnLWNoZWNrZXJlZCBmYS0zeCI+PC9pPjxici8+CiAgICAgICAgICAgICAgICAgICAgICAgIElzc3VlcyBGaXhlZCBpbiB0aGlzIFNwZWNpZmljYXRpb24KICAgICAgICAgICAgICAgICAgICA8L2E+Jm5ic3A7JmRhc2g7CiAgICAgICAgICAgICAgICAgICAgPGJyLz4KICAgICAgICAgICAgICAgICAgICA8ZW0+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vaXNzdWVzLm9tZy5vcmcvaXNzdWVzL3NwZWMvQU1JNENDTS8xLjEvZml4ZWQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgVmVyc2lvbiAxLjEgb25seQogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9lbT4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJjb2wtbWQtMiI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9pc3N1ZXMub21nLm9yZy9pc3N1ZXMvY3JlYXRlLW5ldy1pc3N1ZT9zcGVjaWZpY2F0aW9uPUFNSTRDQ00lMjMxLjEiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtY29tbWVudGluZyBmYS0zeCI+PC9pPjxici8+CiAgICAgICAgICAgICAgICAgICAgICAgIFJlcG9ydCBhbiBpc3N1ZQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJjb2wtbWQtMiI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9pc3N1ZXMub21nLm9yZy9icm93c2UvQU1JNENDTTEyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLXVzZXJzIGZhLTN4Ij48L2k+PGJyLz4KICAgICAgICAgICAgICAgICAgICAgICAgSXNzdWUgVHJhY2tlciAoTWVtYmVycyBPbmx5KQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxociBjbGFzcz0iY29udGFpbmVy4oCdLyI+CiAgICAgICAgPC9zZWN0aW9uPgoKICAgICAgICA8c2VjdGlvbiBpZD0iZG9jdW1lbnRzIiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgICAgICAgPGgyIHJvbGU9ImhlYWRpbmciIGFyaWEtbGV2ZWw9IjEiPlNwZWNpZmljYXRpb24gRG9jdW1lbnRzPC9oMj4KICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3M9ImNvbnRhaW5lciIgaWQ9ImRvY3Mtbm9ybWF0aXZlLXN1cHBvcnRpbmciPgogICAgICAgICAgICAgICAgPGgzIHJvbGU9ImhlYWRpbmciIGFyaWEtbGV2ZWw9IjIiPk5vcm1hdGl2ZSBEb2N1bWVudHM8L2gzPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGFibGUtcmVzcG9uc2l2ZSI+CiAgICA8dGFibGUgY2xhc3M9InRhYmxlIHRhYmxlLXN0cmlwZWQiIGRhdGEtc29ydGFibGU+CiAgICAgICAgPHRoZWFkPgogICAgICAgIDx0cj4KICAgICAgICAgICAgPHRoIGNsYXNzPSJjb2wteHMtNSI+RGVzY3JpcHRpb248L3RoPgogICAgICAgICAgICA8dGggY2xhc3M9ImNvbC14cy0xIj5Gb3JtYXQ8L3RoPgogICAgICAgICAgICA8dGggY2xhc3M9ImNvbC14cy0zIj5VUkw8L3RoPgogICAgICAgICAgICA8dGggY2xhc3M9ImNvbC14cy0yIj5PTUcgRmlsZSBJRDwvdGg+CiAgICAgICAgPC90cj4KICAgICAgICA8L3RoZWFkPgogICAgICAgIDx0Ym9keT4KICAgICAgICA8dHI+CiAgICAgICAgICAgIAogICAgICAgICAgICA8dGQgY2xhc3M9ImRvY3VtZW50LWV4cGxhbmF0aW9uIj5TcGVjaWZpY2F0aW9uPC90ZD4KICAgICAgICAgICAgPHRkIGNsYXNzPSJkb2N1bWVudC1mb3JtYXQiPlBERjwvdGQ+CiAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJkb3dubG9hZC1kb2N1bWVudCIKICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL3NwZWMvQU1JNENDTS8xLjEvUERGIiBkYXRhLXNwZWM9IkFNSTRDQ00vMS4xIiBkYXRhLWxhYmVsPSJBTUk0Q0NNLzEuMS9QREYiPkFNSTRDQ00vMS4xL1BERjwvYT4KICAgICAgICAgICAgICAgICAgICA8YnIvPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZG9jdW1lbnQtbnVtYmVyIgogICAgICAgICAgICAgICAgdGl0bGU9IjQ3NzkxMCI+Zm9ybWFsLzE1LTA4LTAzPC90ZD4KICAgICAgICA8L3RyPgogICAgICAgIDwvdGJvZHk+CiAgICA8L3RhYmxlPgo8L2Rpdj4KICAgICAgICAgICAgPC9zZWN0aW9uPgogICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz0iY29udGFpbmVyIiBpZD0iZG9jcy1ub3JtYXRpdmUtbWFjaGluZSI+CiAgICAgICAgICAgICAgICA8aDMgcm9sZT0iaGVhZGluZyIgYXJpYS1sZXZlbD0iMiI+Tm9ybWF0aXZlIE1hY2hpbmUgUmVhZGFibGUgRG9jdW1lbnRzPC9oMz4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRhYmxlLXJlc3BvbnNpdmUiPgogICAgPHRhYmxlIGNsYXNzPSJ0YWJsZSB0YWJsZS1zdHJpcGVkIiBkYXRhLXNvcnRhYmxlPgogICAgICAgIDx0aGVhZD4KICAgICAgICA8dHI+CiAgICAgICAgICAgIDx0aCBjbGFzcz0iY29sLXhzLTUiPkRlc2NyaXB0aW9uPC90aD4KICAgICAgICAgICAgPHRoIGNsYXNzPSJjb2wteHMtMSI+Rm9ybWF0PC90aD4KICAgICAgICAgICAgPHRoIGNsYXNzPSJjb2wteHMtMyI+VVJMPC90aD4KICAgICAgICAgICAgPHRoIGNsYXNzPSJjb2wteHMtMiI+T01HIEZpbGUgSUQ8L3RoPgogICAgICAgIDwvdHI+CiAgICAgICAgPC90aGVhZD4KICAgICAgICA8dGJvZHk+CiAgICAgICAgPHRyPgogICAgICAgICAgICAKICAgICAgICAgICAgPHRkIGNsYXNzPSJkb2N1bWVudC1leHBsYW5hdGlvbiI+QU1JNENDTSAxLjEgSURMIGZpbGU8L3RkPgogICAgICAgICAgICA8dGQgY2xhc3M9ImRvY3VtZW50LWZvcm1hdCI+QXJjaGl2ZTwvdGQ+CiAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJkb3dubG9hZC1kb2N1bWVudCIKICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL3NwZWMvQU1JNENDTS8yMDE1MDEwMS9hbWk0Y2NtLmlkbCIgZGF0YS1zcGVjPSJBTUk0Q0NNLzEuMSIgZGF0YS1sYWJlbD0iQU1JNENDTS8yMDE1MDEwMS9hbWk0Y2NtLmlkbCI+QU1JNENDTS8yMDE1MDEwMS9hbWk0Y2NtLmlkbDwvYT4KICAgICAgICAgICAgICAgICAgICA8YnIvPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZG9jdW1lbnQtbnVtYmVyIgogICAgICAgICAgICAgICAgdGl0bGU9IjQ3NzE5NiI+cHRjLzE1LTAxLTA3PC90ZD4KICAgICAgICA8L3RyPgogICAgICAgIDx0cj4KICAgICAgICAgICAgCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZG9jdW1lbnQtZXhwbGFuYXRpb24iPkFNSTRDQ00gSURMIGZpbGU8L3RkPgogICAgICAgICAgICA8dGQgY2xhc3M9ImRvY3VtZW50LWZvcm1hdCI+SURMPC90ZD4KICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImRvd25sb2FkLWRvY3VtZW50IgogICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvc3BlYy9BTUk0Q0NNLzIwMTUwMTAxL2FtaTRjY20uaWRsIiBkYXRhLXNwZWM9IkFNSTRDQ00vMS4xIiBkYXRhLWxhYmVsPSJBTUk0Q0NNLzIwMTUwMTAxL2FtaTRjY20uaWRsIj5BTUk0Q0NNLzIwMTUwMTAxL2FtaTRjY20uaWRsPC9hPgogICAgICAgICAgICAgICAgICAgIDxici8+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgPHRkIGNsYXNzPSJkb2N1bWVudC1udW1iZXIiCiAgICAgICAgICAgICAgICB0aXRsZT0iNDc3MTk2Ij5wdGMvMTUtMDEtMDc8L3RkPgogICAgICAgIDwvdHI+CiAgICAgICAgPC90Ym9keT4KICAgIDwvdGFibGU+CjwvZGl2PgogICAgICAgICAgICA8L3NlY3Rpb24+CiAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJjb250YWluZXIiIGlkPSJkb2NzLWluZm9ybWF0aXZlLXN1cHBvcnRpbmciPgogICAgICAgICAgICAgICAgPGgzIHJvbGU9ImhlYWRpbmciIGFyaWEtbGV2ZWw9IjIiPkluZm9ybWF0aXZlIERvY3VtZW50czwvaDM+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0YWJsZS1yZXNwb25zaXZlIj4KICAgIDx0YWJsZSBjbGFzcz0idGFibGUgdGFibGUtc3RyaXBlZCIgZGF0YS1zb3J0YWJsZT4KICAgICAgICA8dGhlYWQ+CiAgICAgICAgPHRyPgogICAgICAgICAgICA8dGggY2xhc3M9ImNvbC14cy01Ij5EZXNjcmlwdGlvbjwvdGg+CiAgICAgICAgICAgIDx0aCBjbGFzcz0iY29sLXhzLTEiPkZvcm1hdDwvdGg+CiAgICAgICAgICAgIDx0aCBjbGFzcz0iY29sLXhzLTMiPlVSTDwvdGg+CiAgICAgICAgICAgIDx0aCBjbGFzcz0iY29sLXhzLTIiPk9NRyBGaWxlIElEPC90aD4KICAgICAgICA8L3RyPgogICAgICAgIDwvdGhlYWQ+CiAgICAgICAgPHRib2R5PgogICAgICAgIDx0cj4KICAgICAgICAgICAgCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZG9jdW1lbnQtZXhwbGFuYXRpb24iPlNwZWNpZmljYXRpb24gY2hhbmdlYmFyPC90ZD4KICAgICAgICAgICAgPHRkIGNsYXNzPSJkb2N1bWVudC1mb3JtYXQiPlBERjwvdGQ+CiAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJkb3dubG9hZC1kb2N1bWVudCIKICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL3NwZWMvQU1JNENDTS8xLjEvUERGL2NoYW5nZWJhciIgZGF0YS1zcGVjPSJBTUk0Q0NNLzEuMSIgZGF0YS1sYWJlbD0iQU1JNENDTS8xLjEvUERGL2NoYW5nZWJhciI+QU1JNENDTS8xLjEvUERGL2NoYW5nZWJhcjwvYT4KICAgICAgICAgICAgICAgICAgICA8YnIvPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZG9jdW1lbnQtbnVtYmVyIgogICAgICAgICAgICAgICAgdGl0bGU9IjQ3NzkxMSI+Zm9ybWFsLzE1LTA4LTA0PC90ZD4KICAgICAgICA8L3RyPgogICAgICAgIDwvdGJvZHk+CiAgICA8L3RhYmxlPgo8L2Rpdj4KICAgICAgICAgICAgPC9zZWN0aW9uPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPGhyIGNsYXNzPSJjb250YWluZXLigJ0vIj4KICAgICAgICA8L3NlY3Rpb24+CgogICAgICAgIDxzZWN0aW9uIGlkPSJzcGVjLXZlcnNpb25zIiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgICAgICAgPGgyIHJvbGU9ImhlYWRpbmciIGFyaWEtbGV2ZWw9IjEiPkhpc3Rvcnk8L2gyPgogICAgICAgICAgICAKICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3M9ImNvbnRhaW5lciIgaWQ9InNwZWMtdmVyc2lvbnMtZm9ybWFsIj4KICAgICAgICAgICAgICAgIDxoMyByb2xlPSJoZWFkaW5nIiBhcmlhLWxldmVsPSIyIj5Gb3JtYWwgVmVyc2lvbnM8L2gzPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGFibGUtcmVzcG9uc2l2ZSI+CiAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJ0YWJsZSB0YWJsZS1zdHJpcGVkIiBkYXRhLXNvcnRhYmxlPgogICAgICAgICAgICAgICAgICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0iY29sLXhzLTIiPlZlcnNpb248L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJjb2wteHMtMyI+QWRvcHRpb24gRGF0ZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9ImNvbC14cy03Ij5VUkw8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4xLjE8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkF1Z3VzdCAyMDE1PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48YSBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL3NwZWMvQU1JNENDTS8xLjEiPmh0dHBzOi8vd3d3Lm9tZy5vcmcvc3BlYy9BTUk0Q0NNLzEuMTwvYT48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+MS4wPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5NYXJjaCAyMDEzPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48YSBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL3NwZWMvQU1JNENDTS8xLjAiPmh0dHBzOi8vd3d3Lm9tZy5vcmcvc3BlYy9BTUk0Q0NNLzEuMDwvYT48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9zZWN0aW9uPgogICAgICAgICAgICA8aHIgY2xhc3M9ImNvbnRhaW5lcuKAnS8iPgogICAgICAgIDwvc2VjdGlvbj4KCgogICAgICAgIDxzZWN0aW9uIGlkPSJpbnZlbnRvcnktbGlua3MiIHJvbGU9ImNvbXBsZW1lbnRhcnkiIGNsYXNzPSJjb250YWluZXIiPgogICAgICAgICAgICA8aDIgcm9sZT0iaGVhZGluZyIgYXJpYS1sZXZlbD0iMSI+TGlua3M8L2gyPgogICAgICAgICAgICA8ZGwgY2xhc3M9ImRsLWhvcml6b250YWwiPgogICAgICAgICAgICAgICAgPGR0PlRoaXMgRG9jdW1lbnQ6PC9kdD4KICAgICAgICAgICAgICAgIDxkZD4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL3NwZWMvQU1JNENDTS8xLjEvQWJvdXQtQU1JNENDTSI+aHR0cHM6Ly93d3cub21nLm9yZy9zcGVjL0FNSTRDQ00vMS4xL0Fib3V0LUFNSTRDQ008L2E+CiAgICAgICAgICAgICAgICA8L2RkPgoKICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgIDxkdCBjbGFzcz0ic21hbGwiPlJERjwvZHQ+CiAgICAgICAgICAgICAgICA8ZGQgY2xhc3M9InNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL3NwZWMvQU1JNENDTS8xLjEvQWJvdXQtQU1JNENDTS5yZGYiPmh0dHBzOi8vd3d3Lm9tZy5vcmcvc3BlYy9BTUk0Q0NNLzEuMS9BYm91dC1BTUk0Q0NNLnJkZjwvYT4KICAgICAgICAgICAgICAgIDwvZGQ+CgogICAgICAgICAgICAgICAgPGR0IGNsYXNzPSJzbWFsbCI+SlNPTi1MRDwvZHQ+CiAgICAgICAgICAgICAgICA8ZGQgY2xhc3M9InNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL3NwZWMvQU1JNENDTS8xLjEvQWJvdXQtQU1JNENDTS5qc29ubGQiPmh0dHBzOi8vd3d3Lm9tZy5vcmcvc3BlYy9BTUk0Q0NNLzEuMS9BYm91dC1BTUk0Q0NNLmpzb25sZDwvYT4KICAgICAgICAgICAgICAgIDwvZGQ+CgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGR0PkxhdGVzdCBEb2N1bWVudDo8L2R0PgogICAgICAgICAgICAgICAgICAgIDxkZD4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9zcGVjL0FNSTRDQ00iPmh0dHBzOi8vd3d3Lm9tZy5vcmcvc3BlYy9BTUk0Q0NNPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGQ+CgogICAgICAgICAgICAgICAgICAgIDxkdCBjbGFzcz0ic21hbGwiPlJERjwvZHQ+CiAgICAgICAgICAgICAgICAgICAgPGRkIGNsYXNzPSJzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvc3BlYy9BTUk0Q0NNL0Fib3V0LUFNSTRDQ00ucmRmIj5odHRwczovL3d3dy5vbWcub3JnL3NwZWMvQU1JNENDTS9BYm91dC1BTUk0Q0NNLnJkZjwvYT4KICAgICAgICAgICAgICAgICAgICA8L2RkPgoKICAgICAgICAgICAgICAgICAgICA8ZHQgY2xhc3M9InNtYWxsIj5KU09OLUxEPC9kdD4KICAgICAgICAgICAgICAgICAgICA8ZGQgY2xhc3M9InNtYWxsIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9zcGVjL0FNSTRDQ00vQWJvdXQtQU1JNENDTS5qc29ubGQiPmh0dHBzOi8vd3d3Lm9tZy5vcmcvc3BlYy9BTUk0Q0NNL0Fib3V0LUFNSTRDQ00uanNvbmxkPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGQ+CgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8ZHQ+QWxsIE1hY2hpbmUgUmVhZGFibGU6PC9kdD4KICAgICAgICAgICAgICAgICAgICAgICAgPGRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cub21nLm9yZy9zcGVjL0FNSTRDQ00vbWFjaGluZS1yZWFkYWJsZSI+aHR0cHM6Ly93d3cub21nLm9yZy9zcGVjL0FNSTRDQ00vbWFjaGluZS1yZWFkYWJsZTwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kZD4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgIDxkdD5NZW1iZXJzIE9ubHk8L2R0PgogICAgICAgICAgICAgICAgPGRkPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvbWVtYmVycy9zcGVjL0FNSTRDQ00vMS4xIj5odHRwczovL3d3dy5vbWcub3JnL21lbWJlcnMvc3BlYy9BTUk0Q0NNLzEuMTwvYT4KICAgICAgICAgICAgICAgIDwvZGQ+CgogICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPCEtLSBTdXBlcnNlZGVzIFZlcnNpb24gLS0+CiAgICAgICAgICAgICAgICAgICAgPGR0PlN1cGVyc2VkZXM6PC9kdD4KICAgICAgICAgICAgICAgICAgICA8ZGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvc3BlYy9BTUk0Q0NNLzEuMS9CZXRhMSI+aHR0cHM6Ly93d3cub21nLm9yZy9zcGVjL0FNSTRDQ00vMS4xL0JldGExPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGQ+CiAgICAgICAgICAgICAgICAKCiAgICAgICAgICAgICAgICA8IS0tIGtleXdvcmRzIC0tPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8IS0tIGNvbnRhY3QgZm9ybSAtLT4KICAgICAgICAgICAgICAgIDxkdD5Db250YWN0OjwvZHQ+CiAgICAgICAgICAgICAgICA8ZGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXRvZ2dsZT0idG9vbHRpcCIgZGF0YS1wbGFjZW1lbnQ9InJpZ2h0IiBkYXRhLWNvbnRhaW5lcj0iYm9keSIgZGF0YS1odG1sPSJ0cnVlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iSnVzdCBzZW5kIGEgcXVlc3Rpb24gYWJvdXQgdGhpcyBzcGVjaWZpY2F0aW9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5vbWcub3JnL3NwZWMvY29udGFjdD9pPUFNSTRDQ00vMS4xIj5TZW5kIGEgcXVlc3Rpb24g4pOYPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgPC9kZD4KICAgICAgICAgICAgPC9kbD4KICAgICAgICA8L3NlY3Rpb24+CiAgICA8L2Rpdj4gPCEtLSBQYWdlIENvbnRlbnQgLyBFbmQgLS0+CjwvZGl2PiA8IS0tIE1haW4gLyBFbmQgLS0+CgogICAgPCEtLSBCT0RZIEZPT1RFUiBJTkNMVURFIEJFR0lOIC0tPgogICAgPCEtLSBGb290ZXIgLS0+CiAgICA8Zm9vdGVyIGNsYXNzPSJmb290ZXIiIGlkPSJmb290ZXIiPgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3Rlci13aWRnZXRzIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTQgY29sLW1kLTMiPgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIFdpZGdldCA6OiBDdXN0b20gTWVudSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id2lkZ2V0X25hdl9tZW51IHdpZGdldCB3aWRnZXRfX2Zvb3RlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9IndpZGdldC10aXRsZSI+Q3VzdG9tIExpbmtzPC9oMz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IndpZGdldC1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvL3d3dy5vbWcub3JnL2dldHRpbmdzdGFydGVkL2JvZF9wdWJsaWMuaHRtIj5Cb2FyZCBvZiBEaXJlY3RvcnM8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvL3d3dy5vbWcub3JnL2xlZ2FsL2luZGV4Lmh0bSI+TGVnYWw8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii8vd3d3Lm9tZy5vcmcvYWJvdXQvbGlhaXNvbi5odG0iPkxpYWlzb24gUmVsYXRpb25zPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvL3d3dy5vbWcub3JnL2Fib3V0L3N0YWZmLmh0bSI+TWVldCBPdXIgU3RhZmY8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIC9XaWRnZXQgOjogQ3VzdG9tIE1lbnUgLS0+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTQgY29sLW1kLTYiPgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIFdpZGdldCA6OiBUZXh0IFdpZGdldCAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id2lkZ2V0X3RleHQgd2lkZ2V0IHdpZGdldF9fZm9vdGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0id2lkZ2V0LXRpdGxlIj5BYm91dCBVczwvaDM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3aWRnZXQtY29udGVudCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+VGhlIE9iamVjdCBNYW5hZ2VtZW50IEdyb3VwJnJlZzsgKE9NRyZyZWc7KSBpcyBhbiBpbnRlcm5hdGlvbmFsLCBvcGVuIG1lbWJlcnNoaXAsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdC1mb3ItcHJvZml0IHRlY2hub2xvZ3kgc3RhbmRhcmRzIGNvbnNvcnRpdW0uPC9wPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5Gb3VuZGVkIGluIDE5ODksIE9NRyBzdGFuZGFyZHMgYXJlIGRyaXZlbiBieSB2ZW5kb3JzLCBlbmQtdXNlcnMsIGFjYWRlbWljCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluc3RpdHV0aW9ucyBhbmQgZ292ZXJubWVudCBhZ2VuY2llcy4gT01HIFRhc2sgRm9yY2VzIGRldmVsb3AgZW50ZXJwcmlzZSBpbnRlZ3JhdGlvbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFuZGFyZHMgZm9yIGEgd2lkZSByYW5nZSBvZiB0ZWNobm9sb2dpZXMgYW5kIGFuIGV2ZW4gd2lkZXIgcmFuZ2Ugb2YKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kdXN0cmllcy48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iLy93d3cub21nLm9yZy9hYm91dC9pbmRleC5odG0iIGNsYXNzPSJidG4gYnRuLXByaW1hcnkiPkxlYXJuIE1vcmU8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gL1dpZGdldCA6OiBUZXh0IFdpZGdldCAtLT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNCBjb2wtbWQtMyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gV2lkZ2V0IDo6IENvbnRhY3RzIEluZm8gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhY3RzLXdpZGdldCB3aWRnZXQgd2lkZ2V0X19mb290ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzPSJ3aWRnZXQtdGl0bGUiPkNvbnRhY3QgVXM8L2gzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id2lkZ2V0LWNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iY29udGFjdHMtaW5mby1saXN0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLW1hcC1tYXJrZXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImluZm8taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOUMgTWVkd2F5IFJvYWQsIFBNQiAyNzQ8YnI+IE1pbGZvcmQsIE1BIDAxNzU3IFVTQQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1waG9uZSI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5mby1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQaC4rMSA3ODEgNDQ0LTA0MDQ8YnI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRmF4ICsxIDc4MS00NDQtMDMyMAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1lbnZlbG9wZSI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImluZm8taXRlbSI+CgkJCQkJCQkJCQkJCQk8YSBocmVmPSIvY2RuLWNnaS9sL2VtYWlsLXByb3RlY3Rpb24jZDZiZmI4YjBiOTk2YjliYmIxZjhiOWE0YjEiPjxzcGFuIGNsYXNzPSJfX2NmX2VtYWlsX18iIGRhdGEtY2ZlbWFpbD0iYjFkOGRmZDdkZWYxZGVkY2Q2OWZkZWMzZDYiPltlbWFpbCYjMTYwO3Byb3RlY3RlZF08L3NwYW4+PC9hPgoJCQkJCQkJCQkJCQk8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSAvV2lkZ2V0IDo6IENvbnRhY3RzIEluZm8gLS0+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyLWNvcHlyaWdodCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS02IGNvbC1tZC02Ij4KICAgICAgICAgICAgICAgICAgICAgICAgQ29weXJpZ2h0ICZjb3B5OyAyMDI0IDxhCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvL3d3dy5vbWcub3JnL2luZGV4Lmh0bSI+T2JqZWN0IE1hbmFnZW1lbnQgR3JvdXAmcmVnOywKICAgICAgICAgICAgICAgICAgICAgICAgT01HJnJlZzs8L2E+ICZuYnNwO3wgJm5ic3A7QWxsIFJpZ2h0cyBSZXNlcnZlZAogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS02IGNvbC1tZC02Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic29jaWFsLWxpbmtzLXdyYXBwZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNvY2lhbC1saW5rcy10eHQiPkNvbm5lY3Qgd2l0aCB1czwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ic29jaWFsLWxpbmtzIHNvY2lhbC1saW5rc19fZGFyayI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9PYmplY3QtTWFuYWdlbWVudC1Hcm91cC0xNzE1MzQ0MTAwMjIvIj48aQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImZhIGZhLWZhY2Vib29rIj48L2k+PC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vb2JqZWN0bWdtdGdyb3VwIj48aSBjbGFzcz0iZmEgZmEtdHdpdHRlciI+PC9pPjwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vZ3JvdXBzLzY2Nzk5Ij48aSBjbGFzcz0iZmEgZmEtbGlua2VkaW4iPjwvaT48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly9ibG9nLm9tZy5vcmcvIj48aSBjbGFzcz0iZmEgZmEtcGVuY2lsLXNxdWFyZS1vIj48L2k+PC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2NoYW5uZWwvVUN0dVRqMXd0eXdvallOWm95UGVZQUZ3Ij48aQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImZhIGZhLXlvdXR1YmUiPjwvaT48L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGx1cy5nb29nbGUuY29tL2IvMTEyMzAzNDYxOTk1ODcwMzE1MTU2LzExMjMwMzQ2MTk5NTg3MDMxNTE1Ni9wb3N0cyI+PGkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZmEgZmEtZ29vZ2xlLXBsdXMiPjwvaT48L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iIyI+PGkgY2xhc3M9ImZhIGZhLXJzcyI+PC9pPjwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Zvb3Rlcj4KICAgIDwhLS0gRm9vdGVyIC8gRW5kIC0tPgoKICAgIDwhLS0gSmF2YXNjcmlwdCBGaWxlcwogICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gLS0+CiAgICA8c2NyaXB0IGRhdGEtY2Zhc3luYz0iZmFsc2UiIHNyYz0iL2Nkbi1jZ2kvc2NyaXB0cy81YzVkZDcyOC9jbG91ZGZsYXJlLXN0YXRpYy9lbWFpbC1kZWNvZGUubWluLmpzIj48L3NjcmlwdD48c2NyaXB0IHNyYz0iaHR0cHM6Ly93d3cub21nLm9yZy92ZW5kb3IvanF1ZXJ5LTEuMTEuMC5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvdmVuZG9yL2pxdWVyeS1taWdyYXRlLTEuMi4xLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly93d3cub21nLm9yZy92ZW5kb3IvYm9vdHN0cmFwLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly93d3cub21nLm9yZy92ZW5kb3IvaGVhZGhlc2l2ZS5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvdmVuZG9yL2ZobW0uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvdmVuZG9yL2pxdWVyeS5mbGlja3JmZWVkLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL3d3dy5vbWcub3JnL3ZlbmRvci9pc290b3BlL2lzb3RvcGUucGtnZC5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvdmVuZG9yL2lzb3RvcGUvanF1ZXJ5LmltYWdlc2xvYWRlZC5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvdmVuZG9yL21hZ25pZmljLXBvcHVwL2pxdWVyeS5tYWduaWZpYy1wb3B1cC5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly93d3cub21nLm9yZy92ZW5kb3Ivb3dsLWNhcm91c2VsL293bC5jYXJvdXNlbC5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvdmVuZG9yL2pxdWVyeS5maXR2aWRzLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL3d3dy5vbWcub3JnL3ZlbmRvci9qcXVlcnkuYXBwZWFyLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL3d3dy5vbWcub3JnL3ZlbmRvci9qcXVlcnkuc3RlbGxhci5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvdmVuZG9yL3NuYXAuc3ZnLW1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly93d3cub21nLm9yZy92ZW5kb3IvbWVkaWFlbGVtZW50L21lZGlhZWxlbWVudC1hbmQtcGxheWVyLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IGFzeW5jPSIiIHNyYz0iaHR0cHM6Ly93d3cuZ29vZ2xlLWFuYWx5dGljcy5jb20vZ2EuanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vd3d3Lm9tZy5vcmcvanMvY3VzdG9tLmpzIj48L3NjcmlwdD4KCiAgICA8IS0tIHNvcnRhYmxlIHRhYmxlcyAtLT4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL3VucGtnLmNvbS9ib290c3RyYXAtdGFibGVAMS4xOC4zL2Rpc3QvYm9vdHN0cmFwLXRhYmxlLm1pbi5qcyI+PC9zY3JpcHQ+CgogICAgPHNjcmlwdCBjcm9zc29yaWdpbj0iYW5vbnltb3VzIgogICAgICAgICAgICBpbnRlZ3JpdHk9InNoYTI1Ni0rbVdkL0c2OVM0cXRnUG93U0VMSWVWQXY3K0Z1TDg3MVdYYW9sZ1hucndRPSIKICAgICAgICAgICAgc3JjPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9zZWxlY3QyLzQuMC4zL2pzL3NlbGVjdDIubWluLmpzIj48L3NjcmlwdD4KICAgIDxsaW5rIGNyb3Nzb3JpZ2luPSJhbm9ueW1vdXMiIGhyZWY9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL3NlbGVjdDIvNC4wLjMvY3NzL3NlbGVjdDIubWluLmNzcyIKICAgICAgICAgIGludGVncml0eT0ic2hhMjU2LXhKT1pIZnB4TFIvdWhoMUJ3WUZTNWZobU9BZElSUWFpT3VsNUYvYjd2M3M9IiByZWw9InN0eWxlc2hlZXQiLz4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGNvbnN0IHNlYXJjaEJveCA9ICQoIiNzcGVjcy1zZWFyY2gtYm94Iik7CiAgICAgICAgICAgIHNlYXJjaEJveC5zZWxlY3QyKHsKICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAiVHlwZSBTcGVjaWZpY2F0aW9ucywgQ2F0ZWdvcmllcywgS2V5d29yZHMgb3IgQ29tcGFuaWVzIiwKICAgICAgICAgICAgICAgIGFsbG93Q2xlYXI6IHRydWUsCiAgICAgICAgICAgICAgICBtaW5pbXVtUmVzdWx0c0ZvclNlYXJjaDogNQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgc2VhcmNoQm94Lm9uKCJzZWxlY3QyOnNlbGVjdCIsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgICAgICBsZXQgcGF0aCA9IGUuY3VycmVudFRhcmdldC52YWx1ZTsKICAgICAgICAgICAgICAgIHNlYXJjaEJveC52YWwoW10pLnRyaWdnZXIoImNoYW5nZSIpOwogICAgICAgICAgICAgICAgaWYgKCF3aW5kb3cubG9jYXRpb24uaHJlZi5lbmRzV2l0aCgiLyIpKQogICAgICAgICAgICAgICAgICAgIHBhdGggPSAiLyIgKyBwYXRoOwogICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSB3aW5kb3cubG9jYXRpb24uaHJlZiArIHBhdGg7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICAkKCIjc3BlY3Mtc2VhcmNoLWJ1dHRvbiIpLmhpZGUoKTsKICAgICAgICAgICAgJCgiYS5kb3dubG9hZC1kb2N1bWVudCIpLmNsaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIGd0YWcoJ2V2ZW50JywgJ2Rvd25sb2FkJywgewogICAgICAgICAgICAgICAgICAgICdldmVudF9jYXRlZ29yeSc6ICdkb3dubG9hZHMnLAogICAgICAgICAgICAgICAgICAgICdldmVudF9hY3Rpb24nOiAkKHRoaXMpLmRhdGEoInNwZWMiKSwKICAgICAgICAgICAgICAgICAgICAnZXZlbnRfbGFiZWwnOiAkKHRoaXMpLmRhdGEoImxhYmVsIikKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgICAkKCdbZGF0YS10b2dnbGU9InRvb2x0aXAiXScpLnRvb2x0aXAoKQogICAgPC9zY3JpcHQ+CiAgICA8IS0tIEJPRFkgRk9PVEVSIElOQ0xVREUgRU5EIC0tPgoKICAgIDwhLS0gU3RhcnQgb2YgSHViU3BvdCBFbWJlZCBDb2RlIC0tPgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGlkPSJocy1zY3JpcHQtbG9hZGVyIiBhc3luYyBkZWZlciBzcmM9Ii8vanMuaHMtc2NyaXB0cy5jb20vMjI3NzA3MzUuanMiPjwvc2NyaXB0PgogICAgPCEtLSBFbmQgb2YgSHViU3BvdCBFbWJlZCBDb2RlIC0tPgoKPC9ib2R5Pgo8L2h0bWw+
  recorded_at: Wed, 26 Jun 2024 21:28:31 GMT
recorded_with: VCR 6.2.0
