---
http_interactions:
- request:
    method: get
    uri: https://www.omg.org/spec/AMI4CCM/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: ''
    headers:
      Date:
      - Thu, 04 Jul 2024 16:50:13 GMT
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cache-Control:
      - max-age=86400, public, s-maxage=3600
      Vary:
      - accept-encoding
      Content-Language:
      - en-US
      Cf-Cache-Status:
      - DYNAMIC
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v4?s=Pb3tJ1acwrYNR0EjIVKlaDK4mmuQYUKxy77wSyJxaKfTEsjOrOGy3UgD7cWZtF%2Bm13aff5L6MhRwB06B9AUySU%2FZCyL1OSAN%2BO92EeKdCqp2FFE4Ul7g9guXRJW0ezVZfcdtaWTBnJhg"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'
      Server:
      - cloudflare
      Cf-Ray:
      - 89e09cf1cc01c022-ATL
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 04 Jul 2024 16:50:13 GMT
recorded_with: VCR 6.2.0
