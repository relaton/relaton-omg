---
http_interactions:
- request:
    method: get
    uri: https://www.omg.org/spec/AMI4CCM/1.0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: ''
    headers:
      Date:
      - Sun, 02 Mar 2025 03:48:51 GMT
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cache-Control:
      - max-age=86400, public, s-maxage=3600
      Vary:
      - accept-encoding
      Content-Language:
      - en-US
      Cf-Cache-Status:
      - REVALIDATED
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v4?s=N2EADuCp%2F%2BGltLa51q9u5jb6q7spghX%2BHTdY3G%2F77eeQW13%2Fcz5skRzhzFyvNrYtvsTCi5a%2BpcJ1G0ImO9wIFF5vEI98uhGMINBhQt5R1LUi%2B65DnY%2FZmYyGTcLfhd%2FBZMC8gzntj4rB"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'
      Server:
      - cloudflare
      Cf-Ray:
      - 919debbe9f05e590-ATL
      Alt-Svc:
      - h3=":443"; ma=86400
      Server-Timing:
      - cfL4;desc="?proto=TCP&rtt=18219&min_rtt=12719&rtt_var=11136&sent=5&recv=8&lost=0&retrans=0&sent_bytes=2780&recv_bytes=755&delivery_rate=129457&cwnd=252&unsent_bytes=0&cid=35bb5bd9a4d95229&ts=134&x=0"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 02 Mar 2025 03:48:51 GMT
recorded_with: VCR 6.3.1
