---
http_interactions:
- request:
    method: get
    uri: https://www.omg.org/spec/AMI4CCM/1.0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: ''
    headers:
      Date:
      - Thu, 04 Jul 2024 16:50:12 GMT
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cache-Control:
      - max-age=86400, public, s-maxage=3600
      Vary:
      - accept-encoding
      Content-Language:
      - en-US
      Cf-Cache-Status:
      - DYNAMIC
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v4?s=sN7T7ZNqycdYMMWKcmY5WtkR%2F1VixMTmL0nU%2FBi6zNQKiKP9EZ9DOVtRW%2FlKY0A40mnH4MH4KYmTbzPJpzD3m67gBDNRYocP29pDW36lf6deQzDCvQJWSjoHgdBC%2BYQB%2FGO6nSoSjF8p"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'
      Server:
      - cloudflare
      Cf-Ray:
      - 89e09cee69f553f9-ATL
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 04 Jul 2024 16:50:12 GMT
recorded_with: VCR 6.2.0
